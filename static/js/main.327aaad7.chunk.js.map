{"version":3,"sources":["store/favorite/types.ts","store/favorite/actions.ts","store/favorite/selectors.ts","components/MagicCard/index.tsx","store/filter/types.ts","store/magic/selectores.ts","components/MagicList/index.tsx","store/filter/actions.ts","store/filter/reducer.ts","components/FilterForm/index.tsx","pages/Main/index.tsx","routes/index.tsx","components/Navbar/index.tsx","store/magic/types.ts","store/magic/actions.ts","store/magic/thunk.ts","App.tsx","serviceWorker.ts","store/favorite/reducer.ts","store/magic/reducer.ts","store/index.ts","store/configureStore.ts","routes/history.ts","index.tsx"],"names":["FavoriteActionTypes","toggleFavorite","id","action","TOGGLE_FAVORITE","getFavorites","createSelector","state","favorites","s","FilterActionTypes","FavIcon","styled","Icon","_templateObject","TextNoSelectable","a","_templateObject2","connect","props","magicCircles","magic","magicCircle","descriptors","dispatch","bindActionCreators","_ref","_React$useState","React","useState","_React$useState2","Object","slicedToArray","open","setOpen","isFavorited","indexOf","circles","map","c","circle","filter","mc","tier","descrip","descriptor","d","flat","elem","index","self","react_default","createElement","card","title","row","col","onClick","icon","type","typography","Text","name","concat","join","bordered","extra","span","es_button","shape","theme","className","style","whiteSpace","strong","executionTime","range","duration","resistanceTest","target","area","effect","materialComponent","xpCost","react_markdown_default","source","description","getVisibleMagic","magics","filters","includes","length","find","tiers","nameSearch","toLowerCase","tags","t","loading","m","textAlign","fontSize","values","Title","level","list","key","itemLayout","dataSource","rowKey","header","renderItem","magicItem","components_MagicCard","updateFilter","UPDATE_FILTER","resetFilter","RESET_FILTER","initialState","reducer","arguments","undefined","objectSpread","payload","FilterForm","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleReset","setValues","filterInitialState","toggle","expand","setState","render","_this$props","handleChange","handleSubmit","setFieldValue","moreOptionsForm","xs","sm","es_form","onSubmit","gutter","Item","display","width","input","size","placeholder","value","onChange","float","es_switch","checked","checkedChildren","color","unCheckedChildren","es_select","mode","v","allowClear","Option","htmlType","disabled","isSubmitting","marginLeft","Component","MyForm","withFormik","mapPropsToValues","filterValues","setSubmitting","Main","components_FilterForm","components_MagicList","Routes","react_router","exact","path","component","MagicActionTypes","LogoTitle","Navbar_templateObject","NavMenu","Menu","Navbar_templateObject2","visible","setVisible","_React$useState3","_React$useState4","selectedInfo","setSelectedInfo","layout","Header","position","zIndex","react_router_dom","to","menu","SubMenu","href","rel","modal","onOk","onCancel","afterClose","hasOwnProperty","desc","dc","fetchRequest","FETCH_REQUEST","axios","get","then","res","data","FETCH_SUCCESS","catch","error","message","FETCH_ERROR","Content","Layout","Footer","App","magicRequest","history","esm","components_Navbar","padding","marginTop","background","minHeight","routes","back_top","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","GET_FAVORITES","ADD_FAVORITE","toConsumableArray","DELETE_FAVORITE","fav","errors","rootReducer","combineReducers","router","connectRouter","favoriteReducer","magicReducer","filterReducer","configureStore","preloadedState","composeEnhancers","composeWithDevTools","middlewares","thunk","routerMiddleware","createStore","createRootReducer","applyMiddleware","apply","createBrowserHistory","favoriteStorage","localStorage","getItem","JSON","parse","store","subscribe","setItem","stringify","getState","ReactDOM","es","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.327aaad7.chunk.js","sourcesContent":["\nexport enum FavoriteActionTypes {\n  GET_FAVORITES = \"@@favorite/GET_FAVORITE\",\n  ADD_FAVORITE = \"@@favorite/ADD_FAVORITE\",\n  DELETE_FAVORITE = \"@@favorite/DELETE_FAVORITE\",\n  TOGGLE_FAVORITE = \"@@favorite/TOGGLE_FAVORITE\",\n}\n\nexport interface FavoriteState {\n  readonly favorites: number[];\n}\n","import { action } from \"typesafe-actions\";\nimport { FavoriteActionTypes } from \"./types\";\n\nexport const getFavorites = (data: number[]) =>\n  action(FavoriteActionTypes.GET_FAVORITES, data);\n\nexport const addFavorite = (id: number) =>\n  action(FavoriteActionTypes.ADD_FAVORITE, id);\n\nexport const deleteFavorite = (id: number) =>\n  action(FavoriteActionTypes.DELETE_FAVORITE, id);\n\nexport const toggleFavorite = (id: number) =>\n  action(FavoriteActionTypes.TOGGLE_FAVORITE, id);\n","import { createSelector } from \"reselect\";\nimport { AppState } from \"..\";\n\nconst getFavoritesState = (state: AppState) => state.favorites;\n\nexport const getFavorites = createSelector(\n  [getFavoritesState],\n  s => s.favorites\n);\n","import React from \"react\";\nimport { Card, Icon, Button, Typography, Row, Col } from \"antd\";\nimport { Magic, MagicCircle, Descriptor } from \"../../store/magic/types\";\nimport styled from \"styled-components\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators, Dispatch } from \"redux\";\nimport { toggleFavorite } from \"../../store/favorite/actions\";\nimport { AppState } from \"../../store\";\nimport { getFavorites } from \"../../store/favorite/selectors\";\nimport ReactMarkdown from \"react-markdown\";\n\nconst FavIcon = styled(Icon)`\n  font-size: 24px;\n  &.favorited {\n    color: #faad14 !important;\n  }\n`;\n\nconst TextNoSelectable = styled.a`\n  -webkit-touch-callout: none; /* iOS Safari */\n  -webkit-user-select: none; /* Safari */\n  -khtml-user-select: none; /* Konqueror HTML */\n  -moz-user-select: none; /* Firefox */\n  -ms-user-select: none; /* Internet Explorer/Edge */\n  user-select: none;\n`;\n\ninterface StateProps {\n  favorites: Array<number>;\n  magicCircles: MagicCircle[];\n  descriptors: Descriptor[];\n}\n\ninterface DispatchProps {\n  toggleFavorite: (id: number) => void;\n}\n\ninterface OwnProps {\n  magic: Magic;\n}\n\ntype Props = OwnProps & DispatchProps & StateProps;\n\nconst MagicCard: React.FC<Props> = ({\n  magic,\n  magicCircles,\n  descriptors,\n  toggleFavorite,\n  favorites\n}: Props) => {\n  const [open, setOpen] = React.useState(false);\n\n  const isFavorited = favorites.indexOf(magic.id) > -1;\n  const circles = magic.circles.map(c => ({\n    circle: magicCircles.filter(mc => mc.id === c.id)[0],\n    tier: c.tier\n  }));\n  const descrip = magic.circles\n    .map(c => c.descriptor.map(d => descriptors.filter(mc => mc.id === d)[0]))\n    .flat()\n    .filter((elem, index, self) => index === self.indexOf(elem));\n\n  return (\n    <Card\n      title={\n        <Row>\n          <Col>\n            <TextNoSelectable onClick={() => setOpen(!open)}>\n              <Icon type={open ? \"up\" : \"down\"} />{\" \"}\n              {magic.icon && (\n                <div>\n                  <Icon type={magic.icon} />{\" \"}\n                </div>\n              )}\n              <Typography.Text>{magic.name}</Typography.Text>\n            </TextNoSelectable>\n          </Col>\n          <Col>\n            <Typography.Text type=\"secondary\">\n              {`${circles\n                .map(c => (!c.circle ? null : `${c.circle.name} ${c.tier}`))\n                .join(\", \")} (${descrip\n                .map(d => (!d ? null : d.name))\n                .join(\", \")})`}\n            </Typography.Text>\n          </Col>\n        </Row>\n      }\n      bordered={false}\n      extra={\n        <Row>\n          <Col span={12}>\n            <Button\n              shape=\"circle\"\n              type=\"dashed\"\n              onClick={() => toggleFavorite(magic.id)}\n            >\n              <FavIcon\n                type=\"star\"\n                theme={isFavorited ? \"filled\" : \"outlined\"}\n                className={isFavorited ? \"favorited\" : \"\"}\n              />\n            </Button>\n          </Col>\n        </Row>\n      }\n    >\n      <div style={{ whiteSpace: \"pre-wrap\" }}>\n        {open && (\n          <div>\n            <p>\n              <Typography.Text strong>Execution Time: </Typography.Text>\n              <Typography.Text>{magic.executionTime}</Typography.Text>\n            </p>\n            <p>\n              <Typography.Text strong>Range: </Typography.Text>\n              <Typography.Text>{magic.range}</Typography.Text>\n            </p>\n            <p>\n              <Typography.Text strong>Duration: </Typography.Text>\n              <Typography.Text>{magic.duration}</Typography.Text>\n            </p>\n            <p>\n              <Typography.Text strong>Resistance Test: </Typography.Text>\n              <Typography.Text>{magic.resistanceTest}</Typography.Text>\n            </p>\n            {magic.target && (\n              <p>\n                <Typography.Text strong>Target: </Typography.Text>\n                <Typography.Text>{magic.target}</Typography.Text>\n              </p>\n            )}\n            {magic.area && (\n              <p>\n                <Typography.Text strong>Area: </Typography.Text>\n                <Typography.Text>{magic.area}</Typography.Text>\n              </p>\n            )}\n            {magic.effect && (\n              <p>\n                <Typography.Text strong>Effect: </Typography.Text>\n                <Typography.Text>{magic.effect}</Typography.Text>\n              </p>\n            )}\n            {magic.materialComponent && (\n              <p>\n                <Typography.Text strong>Material Component: </Typography.Text>\n                <Typography.Text>{magic.materialComponent}</Typography.Text>\n              </p>\n            )}\n            {magic.xpCost && (\n              <p>\n                <Typography.Text strong>XP Cost: </Typography.Text>\n                <Typography.Text>{magic.xpCost}</Typography.Text>\n              </p>\n            )}\n\n            <ReactMarkdown source={magic.description} />\n          </div>\n        )}\n      </div>\n    </Card>\n  );\n};\n\nconst mapStateToProps = (state: AppState, props: OwnProps) => ({\n  magicCircles: state.magic.magicCircle,\n  descriptors: state.magic.descriptors,\n  favorites: getFavorites(state)\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) =>\n  bindActionCreators(\n    {\n      toggleFavorite\n    },\n    dispatch\n  );\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MagicCard);\n","\nexport enum FilterActionTypes {\n  GET_FILTER = \"@@filter/GET_FILTER\",\n  UPDATE_FILTER = \"@@filter/UPDATE_FILTER\",\n  RESET_FILTER = \"@@filter/RESET_FILTER\",\n}\n\nexport interface FilterState {\n  readonly descriptors: number[];\n  readonly magicCircle: number[];\n  readonly tiers: number[];\n  readonly isFavorited: boolean;\n  readonly nameSearch: string;\n}","import { createSelector } from \"reselect\";\nimport { AppState } from \"..\";\nimport { Magic } from \"./types\";\n\nconst getMagic = (state: AppState) => state.magic.magics;\n\n//const getDescriptors = (state: AppState) => state.magic.descriptors;\n\n//const getMagicCircles = (state: AppState) => state.magic.magicCircle;\n\nconst getFilter = (state: AppState) => state.filter;\n\nconst getFavorites = (state: AppState) => state.favorites.favorites;\n\nexport const getVisibleMagic = createSelector(\n  [getMagic, getFavorites, getFilter],\n  (magics, favorites, filters) => {\n    return magics.filter((magic: Magic) => {\n      if (filters.isFavorited && !favorites.includes(magic.id)) {\n        return false;\n      } else if (\n        filters.magicCircle.length &&\n        !magic.circles.find(\n          circle => filters.magicCircle.indexOf(circle.id) > -1\n        )\n      ) {\n        return false;\n      } else if (\n        filters.tiers.length &&\n        !magic.circles.find(circle => filters.tiers.indexOf(circle.tier) > -1)\n      ) {\n        return false;\n      } else if (\n        filters.descriptors.length &&\n        magic.circles.find(\n          circle =>\n            !circle.descriptor.find(\n              descriptor => filters.descriptors.indexOf(descriptor) > -1\n            )\n        )\n      ) {\n        return false;\n      } else if (\n        (filters.nameSearch.length &&\n          !magic.name\n            .toLowerCase()\n            .includes(filters.nameSearch.toLowerCase())) ||\n        (magic.tags &&\n          !magic.tags\n            .map(t => t.toLowerCase())\n            .includes(filters.nameSearch.toLowerCase()))\n      ) {\n        return false;\n      }\n      return true;\n    });\n  }\n);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Magic } from \"../../store/magic/types\";\nimport MagicCard from \"../MagicCard\";\nimport { List, Typography, Icon } from \"antd\";\nimport { AppState } from \"../../store\";\nimport { getVisibleMagic } from \"../../store/magic/selectores\";\n\ninterface StateProps {\n  magics: Magic[];\n  loading: boolean;\n}\n\ntype Props = StateProps;\n\nconst MagicList: React.FC<Props> = ({ magics, loading }: Props) => {\n  const tiers = [0, 1, 2, 3, 4, 5].map(t =>\n    magics.filter(m => {\n      return m.circles.find(c => c.tier === t);\n    })\n  );\n  return (\n    <div>\n      {loading && (\n        <div style={{ textAlign: \"center\", fontSize: 48 }}>\n          <Icon type=\"loading\" />\n        </div>\n      )}\n      {!loading && tiers.map((values, index) => values.length).flat()[0] === 0 && (\n        <div style={{ textAlign: \"center\", fontSize: 48 }}>\n          <Icon type=\"meh\" />\n          <br />\n          <Typography.Title level={4}>No spell found!</Typography.Title>\n        </div>\n      )}\n      {!loading &&\n        tiers.map((values: Magic[], index: number) => {\n          if (!values.length) return false;\n          return (\n            <List\n              key={index}\n              itemLayout=\"horizontal\"\n              dataSource={values}\n              loading={loading}\n              rowKey={(m: Magic) => m.id}\n              header={\n                <Typography.Title level={3}>Tier {index}</Typography.Title>\n              }\n              renderItem={(magicItem: Magic) => <MagicCard magic={magicItem} />}\n            />\n          );\n        })}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  loading: state.magic.loading,\n  magics: getVisibleMagic(state)\n});\n\nexport default connect(mapStateToProps)(MagicList);\n","import { action } from \"typesafe-actions\";\nimport { FilterActionTypes, FilterState } from \"./types\";\n\nexport const getFilters = () =>\n  action(FilterActionTypes.GET_FILTER);\n\nexport const updateFilter = (filter: FilterState) =>\n  action(FilterActionTypes.UPDATE_FILTER, filter);\n\nexport const resetFilter = () =>\n  action(FilterActionTypes.RESET_FILTER);\n","import { FilterState, FilterActionTypes } from \"./types\";\nimport { Reducer } from \"redux\";\n\nconst initialState: FilterState = {\n  descriptors: [],\n  magicCircle: [],\n  tiers: [],\n  isFavorited: false,\n  nameSearch: \"\"\n};\n\nexport const reducer: Reducer<FilterState> = (state = initialState, action) => {\n  switch (action.type) {\n    case FilterActionTypes.UPDATE_FILTER: {\n      return { ...state, ...action.payload };\n    }\n    case FilterActionTypes.RESET_FILTER: {\n      return {\n        ...state,\n        ...initialState\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport { reducer as filterReducer, initialState as filterInitialState };\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Dispatch, bindActionCreators } from \"redux\";\nimport { AppState } from \"../../store/index\";\nimport { Form, Row, Col, Button, Icon, Input, Switch, Select } from \"antd\";\nimport { resetFilter, updateFilter } from \"../../store/filter/actions\";\nimport { FilterState } from \"../../store/filter/types\";\nimport { FormikProps, withFormik } from \"formik\";\nimport { MagicCircle, Descriptor } from \"../../store/magic/types\";\nimport { filterInitialState } from \"../../store/filter/reducer\";\n\ninterface FormValues {\n  isFavorited: boolean;\n  nameSearch: string;\n  descriptors: number[];\n  magicCircle: number[];\n  tiers: number[];\n}\n\ninterface StateProps {\n  filterValues: FilterState;\n  magicCircles: MagicCircle[];\n  descriptors: Descriptor[];\n}\n\ninterface DispatchProps {\n  resetFilter: () => void;\n  updateFilter: (filter: FilterState) => void;\n}\n\ntype Props = StateProps & DispatchProps;\n\nclass FilterForm extends Component<\n  FormikProps<FormValues> & Props,\n  { expand: boolean }\n> {\n  constructor(props: FormikProps<FormValues> & Props) {\n    super(props);\n    this.state = {\n      ...this.state,\n      expand: false\n    };\n  }\n\n  handleReset = () => {\n    this.props.resetFilter();\n    this.props.setValues(filterInitialState);\n  };\n\n  toggle = () => {\n    const { expand } = this.state;\n    this.setState({ expand: !expand });\n  };\n\n  render = () => {\n    const {\n      descriptors,\n      magicCircles,\n      values,\n      handleChange,\n      handleSubmit,\n      setFieldValue\n    } = this.props;\n    const { expand } = this.state;\n    const moreOptionsForm = {\n      xs: 24,\n      sm: 8\n    };\n\n    return (\n      <Form className=\"ant-advanced-search-form\" onSubmit={handleSubmit}>\n        <Row gutter={24}>\n          <Col span={23}>\n            <Form.Item>\n              <Form.Item style={{ display: \"inline-block\", width: \"90%\" }}>\n                <Input\n                  size=\"large\"\n                  placeholder=\"Search by name or tag\"\n                  name=\"nameSearch\"\n                  value={values.nameSearch}\n                  onChange={handleChange}\n                />\n              </Form.Item>\n              <span style={{ display: \"inline-block\", width: \"2%\" }} />\n              <Form.Item\n                style={{ display: \"inline-block\", float: \"right\", width: \"8%\" }}\n              >\n                <Switch\n                  onChange={(checked: boolean) => {\n                    setFieldValue(\"isFavorited\", checked);\n                  }}\n                  checkedChildren={\n                    <Icon\n                      type=\"star\"\n                      theme=\"filled\"\n                      style={{ color: \"#faad14\" }}\n                    />\n                  }\n                  unCheckedChildren={<Icon type=\"star\" />}\n                  checked={values.isFavorited}\n                />\n              </Form.Item>\n            </Form.Item>\n          </Col>\n        </Row>\n        {expand && (\n          <Row gutter={24}>\n            <Col {...moreOptionsForm}>\n              <Form.Item>\n                <Select\n                  mode=\"multiple\"\n                  style={{ width: \"100%\" }}\n                  placeholder=\"Select magic circle(s)\"\n                  value={values.magicCircle}\n                  onChange={v => {\n                    setFieldValue(\"magicCircle\", v);\n                  }}\n                  allowClear={true}\n                >\n                  {magicCircles.map(mc => (\n                    <Select.Option key={mc.id} value={mc.id}>\n                      {mc.name}\n                    </Select.Option>\n                  ))}\n                </Select>\n              </Form.Item>\n            </Col>\n            <Col {...moreOptionsForm}>\n              <Form.Item>\n                <Select\n                  mode=\"multiple\"\n                  style={{ width: \"100%\" }}\n                  placeholder=\"Select descriptor(s)\"\n                  value={values.descriptors}\n                  onChange={v => {\n                    setFieldValue(\"descriptors\", v);\n                  }}\n                  allowClear={true}\n                >\n                  {descriptors\n                    .filter(d => {\n                      if (\n                        values.magicCircle.length > 0 &&\n                        !magicCircles\n                          .filter((m: MagicCircle) =>\n                            values.magicCircle.includes(m.id)\n                          )\n                          .find((mc: MagicCircle) =>\n                            mc.descriptors.includes(d.id)\n                          )\n                      ) {\n                        return false;\n                      }\n                      return true;\n                    })\n                    .map(d => (\n                      <Select.Option key={d.id} value={d.id}>\n                        {d.name}\n                      </Select.Option>\n                    ))}\n                </Select>\n              </Form.Item>\n            </Col>\n            <Col {...moreOptionsForm}>\n              <Form.Item>\n                <Select\n                  mode=\"multiple\"\n                  style={{ width: \"100%\" }}\n                  placeholder=\"Select tier(s)\"\n                  value={values.tiers}\n                  onChange={v => {\n                    setFieldValue(\"tiers\", v);\n                  }}\n                  allowClear={true}\n                >\n                  {[0, 1, 2, 3, 4, 5].map(t => (\n                    <Select.Option key={t} value={t}>\n                      {t}\n                    </Select.Option>\n                  ))}\n                </Select>\n              </Form.Item>\n            </Col>\n          </Row>\n        )}\n        <Row>\n          <Col span={24} style={{ textAlign: \"right\" }}>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              disabled={this.props.isSubmitting}\n            >\n              Search\n            </Button>\n            <Button style={{ marginLeft: 8 }} onClick={this.handleReset}>\n              Reset\n            </Button>\n            <Button\n              size=\"small\"\n              style={{ marginLeft: 8, fontSize: 12 }}\n              onClick={this.toggle}\n            >\n              More Options <Icon type={expand ? \"up\" : \"down\"} />\n            </Button>\n          </Col>\n        </Row>\n      </Form>\n    );\n  };\n}\n\nconst mapStateToProps = (state: AppState) => ({\n  filterValues: state.filter,\n  descriptors: state.magic.descriptors,\n  magicCircles: state.magic.magicCircle\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) =>\n  bindActionCreators(\n    {\n      resetFilter,\n      updateFilter\n    },\n    dispatch\n  );\n\nconst MyForm = withFormik<Props, FormValues>({\n  mapPropsToValues: (props: Props) => props.filterValues,\n  handleSubmit: (values, { props, setSubmitting, setValues }) => {\n    props.updateFilter(values);\n    setSubmitting(false);\n  }\n})(FilterForm);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MyForm);\n","import React from \"react\";\nimport MagicList from \"../../components/MagicList/index\";\nimport { Row } from \"antd\";\nimport FilterForm from \"../../components/FilterForm\";\n\ninterface StateProps {\n  magicRequest: () => void;\n}\n\nconst Main: React.SFC<StateProps> = () => (\n  <div>\n    <Row>\n      <FilterForm />\n    </Row>\n    <Row>\n      <MagicList />\n    </Row>\n  </div>\n);\n\nexport default Main;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Main from \"../pages/Main\";\n\ninterface OwnProps {}\n\nconst Routes: React.FC<OwnProps> = (props: OwnProps) => (\n  <Switch>\n    <Route exact path=\"/\" component={Main} />\n    <Route exact path=\"/teste\" component={Main} />\n  </Switch>\n);\n\nexport default Routes;\n","import React from \"react\";\nimport { Layout, Icon, Typography, Modal } from \"antd\";\nimport { Menu } from \"antd\";\nimport styled from \"styled-components\";\nimport Title from \"antd/lib/typography/Title\";\nimport { Link } from \"react-router-dom\";\nimport { MagicCircle, Descriptor } from \"../../store/magic/types\";\nimport ReactMarkdown from \"react-markdown\";\nimport { connect } from \"react-redux\";\nimport { AppState } from \"../../store/index\";\n\nconst LogoTitle = styled(Title)`\n  height: 100%;\n  padding: 0.25em 0.5rem;\n  margin-bottom: 0 !important;\n  background: rgba(255, 255, 255, 0.2);\n  float: left;\n  font-family: \"Indie Flower\", cursive;\n  color: #ffffff !important;\n`;\n\nconst NavMenu = styled(Menu)`\n  line-height: 64px;\n  float: right;\n`;\n\ninterface StateProps {\n  magicCircles: MagicCircle[];\n  descriptors: Descriptor[];\n}\n\ninterface OwnProps {}\n\ntype Props = StateProps & OwnProps;\n\nconst Navbar: React.FC<Props> = (props: Props) => {\n  const { magicCircles, descriptors } = props;\n  const [visible, setVisible] = React.useState(false);\n  const [selectedInfo, setSelectedInfo] = React.useState<\n    MagicCircle | Descriptor | undefined\n  >(undefined);\n\n  return (\n    <Layout.Header style={{ position: 'fixed', zIndex: 1, width: '100%' }}>\n      <Link to=\"/\">\n        <LogoTitle level={1}>Grimório Dand'A</LogoTitle>\n      </Link>\n      <NavMenu theme=\"dark\" mode=\"horizontal\">\n        <Menu.SubMenu key=\"magicCircles\" title={\"Magic circles\"}>\n          {magicCircles &&\n            magicCircles.map((mc: MagicCircle) => (\n              <Menu.Item\n                onClick={() => {\n                  setSelectedInfo(mc);\n                  setVisible(true);\n                }}\n              >\n                <strong>{mc.name}</strong>\n              </Menu.Item>\n            ))}\n        </Menu.SubMenu>\n        <Menu.SubMenu key=\"descriptors\" title={\"Descriptors\"}>\n          {descriptors &&\n            descriptors.map((d: Descriptor) => (\n              <Menu.Item\n                onClick={() => {\n                  setSelectedInfo(d);\n                  setVisible(true);\n                }}\n              >\n                <strong>{d.name}</strong>\n              </Menu.Item>\n            ))}\n        </Menu.SubMenu>\n        <Menu.Item key=\"github\">\n          <a\n            href=\"https://github.com/antomarsi/grimorio-danda\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <Icon style={{ fontSize: \"24px\" }} type=\"github\" theme=\"filled\" />\n          </a>\n        </Menu.Item>\n      </NavMenu>\n      <Modal\n        title={selectedInfo ? selectedInfo.name : \"\"}\n        visible={visible}\n        onOk={() => setVisible(false)}\n        onCancel={() => setVisible(false)}\n        afterClose={() => setSelectedInfo(undefined)}\n      >\n        <Typography.Title level={3}>\n          {selectedInfo && selectedInfo.name}\n        </Typography.Title>\n        <p>\n          <ReactMarkdown\n            source={\n              selectedInfo\n                ? selectedInfo.description\n                : \"###No description found\"\n            }\n          />\n        </p>\n        <p>\n          {selectedInfo && selectedInfo.hasOwnProperty(\"descriptors\") && (\n            <p>\n              <Typography.Text strong>Descriptors avalibles: </Typography.Text>\n              {(selectedInfo as MagicCircle).descriptors\n                .map(d => {\n                  let desc = descriptors.find(dc => dc.id === d);\n                  if (desc === undefined) return null;\n                  return desc.name;\n                })\n                .join(\", \")}\n            </p>\n          )}\n        </p>\n      </Modal>\n    </Layout.Header>\n  );\n};\n\nconst mapStateToProps = (state: AppState, props: OwnProps) => ({\n  magicCircles: state.magic.magicCircle,\n  descriptors: state.magic.descriptors\n});\n\nexport default connect(mapStateToProps)(Navbar);\n","export interface MagicCircle {\n  id: number;\n  name: string;\n  descriptors: number[];\n  description?: string;\n}\n\nexport interface Descriptor {\n  id: number;\n  name: string;\n  description?: string;\n}\n\nexport interface Magic {\n  id: number;\n  name: string;\n  circles: Array<{ id: number; tier: number, descriptor: Array<number> }>;\n  executionTime: string;\n  range: string;\n  duration: string;\n  resistanceTest: string;\n  description: string;\n\n  target?: string;\n  area?: string;\n  effect?: string;\n  materialComponent?: string;\n  xpCost?: string;\n  icon?: string;\n  tags?: string[];\n}\n\nexport enum MagicActionTypes {\n  FETCH_REQUEST = \"@@magics/FETCH_REQUEST\",\n  FETCH_SUCCESS = \"@@magics/FETCH_SUCCESS\",\n  FETCH_ERROR = \"@@magics/FETCH_ERROR\"\n}\n\nexport interface MagicState {\n  readonly loading: boolean;\n  readonly magics: Magic[];\n  readonly descriptors: Descriptor[];\n  readonly magicCircle: MagicCircle[];\n  readonly errors?: string;\n}","import { action } from \"typesafe-actions\";\nimport { MagicActionTypes, Magic } from \"./types\";\n\nexport const fetchRequest = () => action(MagicActionTypes.FETCH_REQUEST);\n\nexport const fetchSuccess = (data: Magic[]) =>\n  action(MagicActionTypes.FETCH_SUCCESS, data);\n\nexport const fetchError = (message: string) =>\n  action(MagicActionTypes.FETCH_ERROR, message);\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { fetchRequest as fetchRequestAction, fetchSuccess, fetchError } from \"./actions\";\n\nconst apiUrl = \"data/magics.json\";\n\nexport const fetchRequest = () => {\n  return (dispatch: Dispatch) => {\n    dispatch(fetchRequestAction());\n    return axios\n      .get(apiUrl)\n      .then(res => {\n        dispatch(fetchSuccess(res.data));\n      })\n      .catch(error => {\n        dispatch(fetchError(error.message));\n      });\n  };\n};\n","import React, { Component } from \"react\";\nimport \"antd/dist/antd.css\";\nimport \"rpg-awesome/css/rpg-awesome.min.css\";\nimport Routes from \"./routes/index\";\nimport { History } from \"history\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport { Layout, BackTop, Icon } from \"antd\";\nimport Navbar from \"./components/Navbar\";\nimport { HashRouter } from \"react-router-dom\";\nimport { fetchRequest } from \"./store/magic/thunk\";\nimport { Dispatch, bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nconst { Content, Footer } = Layout;\n\ninterface AppProps {\n  history: History;\n}\n\ninterface DispatchProps {\n  magicRequest: () => void;\n}\n\ntype Props = AppProps & DispatchProps;\n\nclass App extends Component<Props> {\n  componentWillMount() {\n    this.props.magicRequest();\n  }\n\n  render() {\n    const { history } = this.props;\n    return (\n      <ConnectedRouter history={history}>\n        <HashRouter>\n          <Layout className=\"layout\">\n            <Navbar />\n            <Content style={{ padding: \"0 50px\", marginTop: 80 }}>\n              <div style={{ background: \"#fff\", padding: 24, minHeight: 280 }}>\n                <Routes />\n              </div>\n            </Content>\n            <BackTop>\n              <div className=\"ant-back-top-inner\"><Icon type=\"arrow-up\"/></div>\n            </BackTop>\n            <Footer style={{ textAlign: \"center\" }}>\n              Created by{\" \"}\n              <a\n                href=\"https://github.com/antomarsi\"\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n              >\n                Antônio Marco da Silva\n              </a>\n            </Footer>\n          </Layout>\n        </HashRouter>\n      </ConnectedRouter>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) =>\n  bindActionCreators(\n    {\n      magicRequest: fetchRequest\n    },\n    dispatch\n  );\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { FavoriteState, FavoriteActionTypes } from \"./types\";\nimport { Reducer } from \"redux\";\n\nconst initialState: FavoriteState = {\n  favorites: []\n};\n\nexport const reducer: Reducer<FavoriteState> = (\n  state = initialState,\n  action\n) => {\n  switch (action.type) {\n    case FavoriteActionTypes.GET_FAVORITES: {\n      return { ...state, loading: true };\n    }\n    case FavoriteActionTypes.ADD_FAVORITE: {\n      if (!state.favorites.includes(action.payload)) {\n        return { ...state, favorites: [...state.favorites, action.payload] };\n      } else {\n        return state;\n      }\n    }\n    case FavoriteActionTypes.DELETE_FAVORITE: {\n      return {\n        ...state,\n        favorites: state.favorites.filter(fav => fav !== action.payload)\n      };\n    }\n    case FavoriteActionTypes.TOGGLE_FAVORITE: {\n      if (state.favorites.includes(action.payload)) {\n        return {\n          ...state,\n          favorites: state.favorites.filter(fav => fav !== action.payload)\n        };\n      } else {\n        return { ...state, favorites: [...state.favorites, action.payload] };\n      }\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport { reducer as favoriteReducer };\n","import { MagicState, MagicActionTypes } from \"./types\";\nimport { Reducer } from \"redux\";\n\nconst initialState: MagicState = {\n  magics: [],\n  magicCircle: [],\n  descriptors: [],\n  errors: undefined,\n  loading: false\n};\n\nconst reducer: Reducer<MagicState> = (state = initialState, action) => {\n  switch (action.type) {\n    case MagicActionTypes.FETCH_REQUEST: {\n      return { ...state, loading: true };\n    }\n    case MagicActionTypes.FETCH_SUCCESS: {\n      return {\n        ...state,\n        magics: action.payload.magics,\n        descriptors: action.payload.descriptors,\n        magicCircle: action.payload.magicCircle,\n        loading: false,\n      };\n    }\n    case MagicActionTypes.FETCH_ERROR: {\n      return { ...state, loading: false, errors: action.payload };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport { reducer as magicReducer };\n","import { combineReducers } from \"redux\";\nimport { FavoriteState } from \"./favorite/types\";\nimport { MagicState } from \"./magic/types\";\nimport { favoriteReducer } from \"./favorite/reducer\";\nimport { magicReducer } from \"./magic/reducer\";\nimport { connectRouter, RouterState } from \"connected-react-router\";\nimport { History } from \"history\";\nimport { filterReducer } from \"./filter/reducer\";\nimport { FilterState } from \"./filter/types\";\n\nexport interface AppState {\n  router?: RouterState;\n  favorites: FavoriteState;\n  magic: MagicState;\n  filter: FilterState;\n}\n\nconst rootReducer = (history: History) =>\n  combineReducers<AppState>({\n    router: connectRouter(history),\n    favorites: favoriteReducer,\n    magic: magicReducer,\n    filter: filterReducer\n  });\n\nexport default rootReducer;\n","import { AppState } from \"./index\";\nimport { Store, createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport { routerMiddleware } from \"connected-react-router\";\nimport { History } from \"history\";\nimport createRootReducer from \"./index\";\n\nconst configureStore = (\n  history: History,\n  preloadedState?: AppState\n): Store<AppState> => {\n  const composeEnhancers = composeWithDevTools({});\n\n  const middlewares = [thunk, routerMiddleware(history)];\n\n  const store = createStore(\n    createRootReducer(history),\n    preloadedState,\n    composeEnhancers(applyMiddleware(...middlewares))\n  );\n  return store;\n};\n\nexport default configureStore;\n","import { createBrowserHistory } from \"history\";\n\nconst history = createBrowserHistory();\n\nexport default history;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport configureStore from \"./store/configureStore\";\nimport history from \"./routes/history\";\nimport { Provider } from \"react-redux\";\nimport { AppState } from \"./store\";\nimport { filterInitialState } from \"./store/filter/reducer\";\n\nconst initialState: AppState = {\n  magic: { loading: false, magics: [], descriptors: [], magicCircle: [] },\n  favorites: { favorites: [] },\n  filter: filterInitialState\n};\n\nlet favoriteStorage = localStorage.getItem(\"favorites\");\nif (typeof favoriteStorage === \"string\") {\n  initialState.favorites = JSON.parse(favoriteStorage);\n}\n\nconst store = configureStore(history, initialState);\n\nstore.subscribe(() => {\n  localStorage.setItem(\"favorites\", JSON.stringify(store.getState().favorites));\n});\n\nReactDOM.render(\n  <Provider store={store}>\n    <App history={history} />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}