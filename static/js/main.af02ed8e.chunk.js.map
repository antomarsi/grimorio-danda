{"version":3,"sources":["components/Topbar.js","components/Filtro.js","components/MagiaList.js","pages/Index.js","pages/NotFound.js","pages/MagiaInfo.js","App.js","serviceWorker.js","index.js"],"names":["Topbar","state","isOpen","this","setState","_this2","react_default","a","createElement","Navbar","color","dark","expand","fixed","Link","to","style","textDecoration","NavbarToggler","onClick","toggle","Collapse","navbar","Nav","className","NavItem","NavLink","href","Component","Filtro","props","nameFilter","levelsFilter","circulosFilter","favoritesOnly","Card","CardBody","CardTitle","Form","FormGroup","Label","for","Input","name","value","id","onChange","e","handleChange","type","multiple","Array","from","keys","map","n","key","circulo","index","check","MagiaList","isFav","magiaId","_this","removeFav","addToFav","magia","favorites","includes","ListGroupItem","marginBottom","index_es","icon","FullStar","EmptyStar","size","toggleFav","concat","slugify","nome","replacement","niveis","nivel","descritores","descritor","_this3","_this$props","listaMagia","magias","sort","b","filter","length","toLowerCase","some","x","y","Number","parseInt","ListGroup","renderMagia","Index","onSearchChange","target","selectedOptions","options","i","selected","push","Object","defineProperty","checked","_this$state","Container","Row","Col","xs","md","components_Filtro","components_MagiaList","NotFound","MagiaInfo","history","magicId","match","params","find","tempoExecucao","alcance","alvo","area","efeito","duracao","testeResistencia","componenteMaterial","custoXP","dangerouslySetInnerHTML","__html","descricao","withRouter","App","localStorage","JSON","parse","console","log","toConsumableArray","saveFav","fav","stringify","_this4","components_Topbar","role","Switch","Route","exact","path","render","pages_Index","assign","pages_MagiaInfo","component","Boolean","window","location","hostname","ReactDOM","HashRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.af02ed8e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\n\nclass Topbar extends Component {\n  state = {\n    isOpen: false\n  };\n\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  render() {\n    return (\n      <Navbar color=\"dark\" dark expand=\"md\" fixed=\"top\">\n        <Link to=\"/\" style={{ textDecoration: \"none\", color: \"#FFFFFF\" }}>\n          Grimório Dand'a\n        </Link>\n        <NavbarToggler onClick={() => this.toggle()} />\n        <Collapse isOpen={this.state.isOpen} navbar>\n          <Nav className=\"ml-auto\" navbar>\n            <NavItem>\n              <NavLink href=\"https://github.com/antomarsi/grimorio-danda\">\n                GitHub\n              </NavLink>\n            </NavItem>\n          </Nav>\n        </Collapse>\n      </Navbar>\n    );\n  }\n}\n\nexport default Topbar;\n","import React from \"react\";\nimport {\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Card,\n  CardBody,\n  CardTitle\n} from \"reactstrap\";\n\nfunction Filtro(props) {\n  const { nameFilter, levelsFilter, circulosFilter, favoritesOnly } = props;\n  const circulosData = [\n    \"Abjuração\",\n    \"Adivinhação\",\n    \"Encantamento\",\n    \"Evocação\",\n    \"Etérea\",\n    \"Solar\",\n    \"Lunar\",\n    \"Transmutação\",\n    \"Tempo&Espaço\"\n  ];\n\n  return (\n    <Card>\n      <CardBody>\n        <CardTitle>\n          <h2>Filtro</h2>\n        </CardTitle>\n        <Form>\n          <FormGroup>\n            <Label for=\"nameFilter\">Nome</Label>\n            <Input\n              name=\"nameFilter\"\n              value={nameFilter}\n              id=\"nameFilter\"\n              onChange={e => props.handleChange(e)}\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"levelsFilter\">\n              Nível{\" \"}\n              <small className=\"text-muted\">\n                Use CTRL para selecionar mais de uma opção\n              </small>\n            </Label>\n            <Input\n              value={levelsFilter}\n              type=\"select\"\n              name=\"levelsFilter\"\n              id=\"levelsFilter\"\n              multiple\n              onChange={e => props.handleChange(e)}\n            >\n              {Array.from(Array(6).keys()).map(n => (\n                <option value={n} key={n}>\n                  {n}\n                </option>\n              ))}\n            </Input>\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"circulosFilter\">\n              Círculo{\" \"}\n              <small className=\"text-muted\">\n                Use CTRL para selecionar mais de uma opção\n              </small>\n            </Label>\n            <Input\n              value={circulosFilter}\n              type=\"select\"\n              name=\"circulosFilter\"\n              id=\"circulosFilter\"\n              multiple\n              onChange={e => props.handleChange(e)}\n            >\n              {circulosData.map((circulo, index) => (\n                <option value={circulo} key={index}>\n                  {circulo}\n                </option>\n              ))}\n            </Input>\n          </FormGroup>\n          <FormGroup check>\n            <Label check>\n              <Input\n                type=\"checkbox\"\n                name=\"favoritesOnly\"\n                id=\"favoritesOnly\"\n                value={favoritesOnly}\n                onChange={e => props.handleChange(e)}\n              />{\" \"}\n              Somente Favoritos\n            </Label>\n          </FormGroup>\n        </Form>\n      </CardBody>\n    </Card>\n  );\n}\n\nexport default Filtro;\n","import React, { Component } from \"react\";\nimport { ListGroup, ListGroupItem } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport slugify from \"slugify\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faStar as FullStar } from \"@fortawesome/free-solid-svg-icons\";\nimport { faStar as EmptyStar } from \"@fortawesome/free-regular-svg-icons\";\n\nclass MagiaList extends Component {\n  toggleFav(isFav, magiaId) {\n    if (isFav) {\n      (magiaId => this.props.removeFav(magiaId))(magiaId);\n    } else {\n      (magiaId => this.props.addToFav(magiaId))(magiaId);\n    }\n  }\n\n  renderMagia(magia) {\n    const { favorites } = this.props;\n    let isFav = favorites.includes(magia.id);\n    return (\n      <ListGroupItem key={magia.id}>\n        <dl className=\"row\" style={{ marginBottom: 0 }}>\n          <dt className=\"col-sm-6\">\n            <FontAwesomeIcon\n              className={isFav ? \"text-warning\" : \"\"}\n              icon={isFav ? FullStar : EmptyStar}\n              size=\"lg\"\n              onClick={() => this.toggleFav(isFav, magia.id)}\n            />\n            <Link\n              to={`${magia.id}/${slugify(magia.nome, { replacement: \"-\" })}`}\n            >\n              {magia.nome}\n            </Link>\n          </dt>\n          <dd className=\"col-sm-6\">\n            {magia.niveis.map((nivel, index) => (\n              <p key={index}>\n                {nivel.circulo} {nivel.nivel}{\" \"}\n                {magia.descritores[index] &&\n                  `(${magia.descritores[index].descritor})`}\n              </p>\n            ))}\n          </dd>\n        </dl>\n      </ListGroupItem>\n    );\n  }\n  render() {\n    const {\n      nameFilter,\n      levelsFilter,\n      circulosFilter,\n      listaMagia,\n      favoritesOnly,\n      favorites\n    } = this.props;\n    const magias = listaMagia\n      .sort((a, b) => a.niveis[0].nivel - b.niveis[0].nivel)\n      .filter(magia => {\n        if (\n          nameFilter.length &&\n          !magia.nome.toLowerCase().includes(nameFilter.toLowerCase())\n        ) {\n          return false;\n        } else if (\n          levelsFilter.length &&\n          !levelsFilter.some(x =>\n            magia.niveis.some(y => y.nivel === Number.parseInt(x))\n          )\n        ) {\n          return false;\n        } else if (\n          circulosFilter.length &&\n          !circulosFilter.some(x =>\n            magia.niveis.some(y => y.circulo.toLowerCase() === x.toLowerCase())\n          )\n        ) {\n          return false;\n        } else if (favoritesOnly === true && !favorites.includes(magia.id)) {\n          return false;\n        } else {\n          return true;\n        }\n      });\n\n    return (\n      <ListGroup>{magias.map(magia => this.renderMagia(magia))}</ListGroup>\n    );\n  }\n}\n\nexport default MagiaList;\n","import React, { Component } from \"react\";\nimport Filtro from \"../components/Filtro\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport MagiaList from \"../components/MagiaList\";\n\nclass Index extends Component {\n  // Filtros deNome, niveis (círculo/nivel),\n  state = {\n    nameFilter: \"\",\n    levelsFilter: [],\n    circulosFilter: [],\n    favoritesOnly: false\n  };\n\n  onSearchChange = e => {\n    if (e.target.selectedOptions) {\n      let options = e.target.options;\n      let value = [];\n      for (let i = 0; i < options.length; i++) {\n        options[i].selected && value.push(options[i].value);\n      }\n      this.setState({ [e.target.name]: value });\n    } else if (e.target.type === \"checkbox\") {\n      this.setState({ [e.target.name]: e.target.checked });\n    } else {\n      this.setState({ [e.target.name]: e.target.value });\n    }\n  };\n\n  render() {\n    const {\n      nameFilter,\n      levelsFilter,\n      circulosFilter,\n      favoritesOnly\n    } = this.state;\n    const { listaMagia, favorites } = this.props;\n    return (\n      <Container>\n        <Row>\n          <Col xs=\"12\" md=\"6\">\n            <Filtro\n              levelsFilter={levelsFilter}\n              circulosFilter={circulosFilter}\n              nameFilter={nameFilter}\n              handleChange={this.onSearchChange}\n              favoritesOnly={favoritesOnly}\n            />\n          </Col>\n          <Col xs=\"12\" md=\"6\">\n            <MagiaList\n              levelsFilter={levelsFilter}\n              circulosFilter={circulosFilter}\n              nameFilter={nameFilter}\n              favoritesOnly={favoritesOnly}\n              listaMagia={listaMagia}\n              favorites={favorites}\n              addToFav={this.props.addToFav}\n              removeFav={this.props.removeFav}\n            />\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Index;\n","import React, { Component } from \"react\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\n\nclass NotFound extends Component {\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col md=\"12\">\n            <div className=\"error-template\">\n              <h1>Oops!</h1>\n              <h2>404 Not Found!</h2>\n              <div className=\"error-details\">\n                Mals, a página não foi encontrada...\n              </div>\n              <div className=\"error-actions\">\n                <Link to=\"/\" className=\"btn btn-primary btn-lg\">\n                  Take Me Home <small style={{textDecoration: 'line-through'}}>Country roads</small>\n                </Link>\n              </div>\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default NotFound;\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { CardTitle, Card, CardBody } from \"reactstrap\";\n\nclass MagiaInfo extends Component {\n  state = {\n    magia: null\n  };\n\n  componentWillMount() {\n    const {\n      history,\n      listaMagia,\n      match: {\n        params: { magicId }\n      }\n    } = this.props;\n    const magia = listaMagia.find(x => x.id === Number.parseInt(magicId));\n    if (!magia) {\n      history.push(\"/404\");\n    }\n\n    this.setState({ magia });\n  }\n\n  render() {\n    const { magia } = this.state;\n    if (!magia) return <div />;\n    return (\n      <Card>\n        <CardBody>\n          <CardTitle>\n            <h3>{magia.nome}</h3>\n          </CardTitle>\n          <dl className=\"row\">\n            <dt className=\"col-sm-3\">Niveis</dt>\n            <dd className=\"col-sm-9\">\n              {magia.niveis.map((nivel, index) => (\n                <p key={index}>\n                  {nivel.circulo} {nivel.nivel}{\" \"}\n                  {magia.descritores[index] &&\n                    `(${magia.descritores[index].descritor})`}\n                </p>\n              ))}\n            </dd>\n            <dt className=\"col-sm-3\">Descritores</dt>\n            <dd className=\"col-sm-9\">\n              {magia.descritores.map((descritor, index) => (\n                <p key={index}>{descritor.descritor}</p>\n              ))}\n            </dd>\n            <dt className=\"col-sm-3\">Tempo de execução</dt>\n            <dd className=\"col-sm-9\">{magia.tempoExecucao}</dd>\n            <dt className=\"col-sm-3\">Alcance</dt>\n            <dd className=\"col-sm-9\">{magia.alcance}</dd>\n            <dt className=\"col-sm-3\">Alvo</dt>\n            <dd className=\"col-sm-9\">{magia.alvo}</dd>\n            <dt className=\"col-sm-3\">Area</dt>\n            <dd className=\"col-sm-9\">{magia.area}</dd>\n            <dt className=\"col-sm-3\">Efeito</dt>\n            <dd className=\"col-sm-9\">{magia.efeito}</dd>\n            <dt className=\"col-sm-3\">Duração</dt>\n            <dd className=\"col-sm-9\">{magia.duracao}</dd>\n            <dt className=\"col-sm-3\">Teste de Resistência</dt>\n            <dd className=\"col-sm-9\">{magia.testeResistencia}</dd>\n            <dt className=\"col-sm-3\">Componente material</dt>\n            <dd className=\"col-sm-9\">{magia.componenteMaterial}</dd>\n            <dt className=\"col-sm-3\">Custo de XP</dt>\n            <dd className=\"col-sm-9\">{magia.custoXP}</dd>\n          </dl>\n          <p className=\"h4\">Descrição</p>\n          <p dangerouslySetInnerHTML={{ __html: magia.descricao }} />\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nexport default withRouter(MagiaInfo);\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Topbar from \"./components/Topbar\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Index from \"./pages/Index\";\nimport NotFound from \"./pages/NotFound\";\nimport MagiaInfo from \"./pages/MagiaInfo\";\nimport magias from \"./data/magias.json\";\n\nclass App extends Component {\n  state = {\n    magias: [],\n    favorites: []\n  };\n\n  componentWillMount() {\n    if (localStorage.favorites) {\n      this.setState({\n        magias: magias,\n        favorites: JSON.parse(localStorage.favorites)\n      });\n    } else {\n      this.setState({ magias });\n    }\n  }\n  addToFav(id) {\n    console.log(\"add id\");\n    if (!this.state.favorites.includes(id)) {\n      this.setState({ favorites: [...this.state.favorites, id] }, () =>\n        this.saveFav()\n      );\n    }\n  }\n  removeFav(id) {\n    console.log(\"removing id\");\n    if (this.state.favorites.includes(id)) {\n      this.setState(\n        { favorites: this.state.favorites.filter(fav => fav !== id) },\n        () => this.saveFav()\n      );\n    }\n  }\n\n  saveFav() {\n    if (this.state.favorites) {\n      localStorage.favorites = JSON.stringify(this.state.favorites);\n    }\n  }\n\n  render() {\n    const { magias, favorites } = this.state;\n    return (\n      <div>\n        <Topbar />\n        <main role=\"main\">\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              render={props => (\n                <Index\n                  {...props}\n                  listaMagia={magias}\n                  favorites={favorites}\n                  addToFav={id => this.addToFav(id)}\n                  removeFav={id => this.removeFav(id)}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/:magicId(\\d+)/*\"\n              render={props => <MagiaInfo {...props} listaMagia={magias} />}\n            />\n            <Route component={NotFound} />\n          </Switch>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"rpg-awesome/css/rpg-awesome.min.css\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}