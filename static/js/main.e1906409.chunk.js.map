{"version":3,"sources":["components/Topbar/index.tsx","store/ducks/favorite/types.ts","store/ducks/magic/types.ts","services/localStorage.ts","store/ducks/magic/index.ts","store/ducks/favorite/index.ts","store/ducks/rootReducer.ts","store/ducks/magic/actions.ts","services/api.ts","store/ducks/magic/sagas.ts","store/ducks/favorite/actions.ts","store/ducks/favorite/sagas.ts","store/ducks/rootSaga.ts","store/index.ts","components/Footer/index.tsx","components/FilterForm/index.tsx","components/MagicCard/index.tsx","components/MagicList/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["FavoriteTypes","LogoTitle","styled","Title","_templateObject","NavMenu","menu","_templateObject2","Header","layout","_templateObject3","Topbar","_useState","useState","_useState2","Object","slicedToArray","visible","setVisible","magicCircles","useSelector","state","magic","data","descriptors","_React$useState","React","undefined","_React$useState2","selectedInfo","setSelectedInfo","react_default","a","createElement","col","xs","md","level","theme","mode","SubMenu","key","title","map","mc","Item","id","onClick","name","d","href","target","rel","icon","style","fontSize","type","modal","onOk","onCancel","afterClose","typography","react_markdown_default","source","description","hasOwnProperty","Text","strong","desc","find","dc","join","MagicTypes","localState","serializedState","localStorage","getItem","JSON","parse","err","loadFavorites","initialState","loading","error","favorites","InitialState","magics","filter","isFavorited","nameSearch","magicCircle","tiers","reducer","arguments","length","action","FETCH_REQUEST","objectSpread","SET_FILTER","payload","FETCH_SUCCESS","FETCH_ERROR","ADD_FAVORITE","includes","concat","toConsumableArray","DELETE_FAVORITE","fav","createRootReducer","combineReducers","favorite","fetchSuccess","fetchError","message","setFilter","api","axios","create","baseURL","process","headers","Content-Type","getMagic","response","regenerator_default","wrap","_context","prev","next","call","get","sent","put","t0","stop","_marked","saga","takeLatest","Swal","fire","text","favs","fetchFavorites","addFavorite","deleteFavorite","sagas_marked","_context2","select","push","_marked2","index","_context3","indexOf","splice","_marked3","takeEvery","rootSaga","all","MagicSaga","FavoriteSaga","abrupt","rootSaga_marked","InitialStateFavorite","InitialStateMagic","configureStore","preloadedState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","middlewares","store","createStore","applyMiddleware","apply","subscribe","stringify","setItem","_unused","saveFavorites","getState","run","Footer","textAlign","FilterForm","initialValues","dispatch","useDispatch","expand","setExpand","moreOptionsForm","sm","formik_esm","onSubmit","values","actions","setSubmitting","render","formikBag","es_form","className","handleSubmit","row","gutter","span","marginBottom","display","width","input","size","placeholder","defaultValue","onChange","handleChange","float","es_switch","checked","setFieldValue","checkedChildren","color","defaultChecked","unCheckedChildren","slidedown","closed","es_select","v","allowClear","Option","value","t","offset","es_button","block","htmlType","disabled","isSubmitting","resetForm","FavIcon","MagicCard_templateObject","TextNoSelectable","MagicCard_templateObject2","MagicCard","_ref","open","setOpen","circles","c","circle","tier","descrip","descriptor","flat","elem","self","toggleFavorite","card","bordered","extra","shape","whiteSpace","paddingTop","executionTime","range","duration","resistanceTest","area","effect","materialComponent","xpCost","MagicList_templateObject","MagicTierList","props","MagicList_TextNoSelectable","slidedown_default","list","itemLayout","dataSource","rowKey","m","renderItem","magicItem","components_MagicCard","MagicList","toLowerCase","magia","some","x","y","z","useEffect","reduce","sum","current","TransitionGroup","CSSTransition","timeout","MagicList_MagicTierList","Content","App","es","components_Topbar","components_FilterForm","components_MagicList","back_top","components_Footer","Boolean","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e1906409.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Layout, Icon, Typography, Modal, Col } from \"antd\";\nimport { Menu } from \"antd\";\nimport styled from \"styled-components\";\nimport Title from \"antd/lib/typography/Title\";\nimport { MagicCircle, Descriptor } from \"../../store/ducks/magic/types\";\nimport ReactMarkdown from \"react-markdown\";\nimport { useSelector } from \"react-redux\";\nimport { ApplicationState } from \"../../store/index\";\n\nconst LogoTitle = styled(Title)`\n  height: 100%;\n  padding: 0.25em 0.5rem;\n  margin-bottom: 0 !important;\n  background: rgba(255, 255, 255, 0.2);\n  float: left;\n  font-family: \"Indie Flower\", cursive;\n  color: #ffffff !important;\n`;\n\nconst NavMenu = styled(Menu)`\n  line-height: 64px;\n  float: right;\n`;\nconst Header = styled(Layout.Header)`\n  position: \"fixed\";\n  z-index: 1;\n  width: \"100%\";\n`;\n\n\n\nconst Topbar: React.SFC = () => {\n  const [visible, setVisible] = useState(false);\n\n  const magicCircles = useSelector(\n    (state: ApplicationState) => state.magic.data.magicCircles\n  );\n  const descriptors = useSelector(\n    (state: ApplicationState) => state.magic.data.descriptors\n  );\n  const [selectedInfo, setSelectedInfo] = React.useState<\n    MagicCircle | Descriptor | undefined\n  >(undefined);\n\n  return (\n    <Header>\n      <Col xs={0} md={12}>\n        <LogoTitle level={1}>Grimório Dand'A</LogoTitle>\n      </Col>\n      <NavMenu theme=\"dark\" mode=\"horizontal\">\n        <Menu.SubMenu key=\"magicCircles\" title={\"Magic circles\"}>\n          {magicCircles &&\n            magicCircles.map((mc: MagicCircle) => (\n              <Menu.Item\n                key={mc.id}\n                onClick={() => {\n                  setSelectedInfo(mc);\n                  setVisible(true);\n                }}\n              >\n                <strong>{mc.name}</strong>\n              </Menu.Item>\n            ))}\n        </Menu.SubMenu>\n        <Menu.SubMenu key=\"descriptors\" title={\"Descriptors\"}>\n          {descriptors &&\n            descriptors.map((d: Descriptor) => (\n              <Menu.Item\n                key={d.id}\n                onClick={() => {\n                  setSelectedInfo(d);\n                  setVisible(true);\n                }}\n              >\n                <strong>{d.name}</strong>\n              </Menu.Item>\n            ))}\n        </Menu.SubMenu>\n        <Menu.Item key=\"github\">\n          <a\n            href=\"https://github.com/antomarsi/grimorio-danda\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <Icon style={{ fontSize: \"24px\" }} type=\"github\" theme=\"filled\" />\n          </a>\n        </Menu.Item>\n      </NavMenu>\n      <Modal\n        title={selectedInfo ? selectedInfo.name : \"\"}\n        visible={visible}\n        onOk={() => setVisible(false)}\n        onCancel={() => setVisible(false)}\n        afterClose={() => setSelectedInfo(undefined)}\n      >\n        <Typography.Title level={3}>\n          {selectedInfo && selectedInfo.name}\n        </Typography.Title>\n        <p>\n          <ReactMarkdown\n            source={\n              selectedInfo\n                ? selectedInfo.description\n                : \"###No description found\"\n            }\n          />\n        </p>\n        <p>\n          {selectedInfo && selectedInfo.hasOwnProperty(\"descriptors\") && (\n            <p>\n              <Typography.Text strong>Descriptors available: </Typography.Text>\n              {(selectedInfo as MagicCircle).descriptors\n                .map(d => {\n                  let desc = descriptors.find(dc => dc.id === d);\n                  if (desc === undefined) return null;\n                  return desc.name;\n                })\n                .join(\", \")}\n            </p>\n          )}\n        </p>\n      </Modal>\n    </Header>\n  );\n};\n\nexport default Topbar;\n","import { loadFavorites } from \"../../../services/localStorage\";\n\nexport enum FavoriteTypes {\n  FETCH_REQUEST = \"@@favorite/FETCH_REQUEST\",\n  FETCH_SUCCESS = \"@@favorite/FETCH_SUCCESS\",\n  FETCH_ERROR = \"@@favorite/FETCH_ERROR\",\n  ADD_FAVORITE = \"@@favorite/ADD_FAVORITE\",\n  DELETE_FAVORITE = \"@@favorite/DELETE_FAVORITE\"\n}\n\nexport interface FavoriteState {\n  readonly loading: boolean;\n  readonly favorites: number[];\n  readonly error: boolean;\n}\nconst localState = loadFavorites();\nexport const initialState: FavoriteState = {\n  loading: false,\n  error: false,\n  favorites: localState ? localState : []\n};\n","export interface MagicCircle {\n  id: number;\n  name: string;\n  descriptors: number[];\n  description?: string;\n}\n\nexport interface Descriptor {\n  id: number;\n  name: string;\n  description?: string;\n}\n\nexport interface Magic {\n  id: number;\n  name: string;\n  circles: Array<{ id: number; tier: number; descriptor: Array<number> }>;\n  executionTime: string;\n  range: string;\n  duration: string;\n  resistanceTest: string;\n  description: string;\n\n  target?: string;\n  area?: string;\n  effect?: string;\n  materialComponent?: string;\n  xpCost?: string;\n  icon?: string;\n  tags?: string[];\n}\n\nexport enum MagicTypes {\n  FETCH_REQUEST = \"@@magics/FETCH_REQUEST\",\n  FETCH_SUCCESS = \"@@magics/FETCH_SUCCESS\",\n  FETCH_ERROR = \"@@magics/FETCH_ERROR\",\n  SET_FILTER = \"@@magics/SET_FILTER\",\n  RESET_FILTER = \"@@magics/RESET_FILTER\"\n}\n\nexport interface Filter {\n  readonly descriptors: number[];\n  readonly magicCircle: number[];\n  readonly tiers: number[];\n  readonly isFavorited: boolean;\n  readonly nameSearch: string;\n}\n\nexport interface MagicState {\n  readonly loading: boolean;\n  readonly data: {\n    readonly magics: Magic[];\n    readonly descriptors: Descriptor[];\n    readonly magicCircles: MagicCircle[];\n  };\n  readonly error: boolean;\n  readonly filter: Filter;\n}\n\nexport const InitialState: MagicState = {\n  loading: false,\n  error: false,\n  data: {\n    magics: [],\n    descriptors: [],\n    magicCircles: []\n  },\n  filter: {\n    isFavorited: false,\n    nameSearch: \"\",\n    descriptors: [],\n    magicCircle: [],\n    tiers: []\n  }\n};\n","const keyValue = \"fav\";\n\nexport const loadFavorites = () => {\n  try {\n    const serializedState = localStorage.getItem(keyValue);\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n};\nexport const saveFavorites = (state: number[]) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem(keyValue, serializedState);\n  } catch {\n    // ignore write errors\n  }\n};\n","import {\n  MagicState,\n  MagicTypes,\n  InitialState\n} from \"./types\";\nimport { Reducer } from \"redux\";\n\nconst reducer: Reducer<MagicState> = (state = InitialState, action) => {\n  switch (action.type) {\n    case MagicTypes.FETCH_REQUEST: {\n      return { ...state, loading: true, error: false };\n    }\n    case MagicTypes.SET_FILTER: {\n      return { ...state, filter: action.payload };\n    }\n    case MagicTypes.FETCH_SUCCESS: {\n      return {\n        ...state,\n        data: {\n          magics: action.payload.magics,\n          descriptors: action.payload.descriptors,\n          magicCircles: action.payload.magicCircle\n        },\n        loading: false,\n        error: false\n      };\n    }\n    case MagicTypes.FETCH_ERROR: {\n      return { ...state, loading: false, error: true };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default reducer;\n","import { FavoriteState, FavoriteTypes, initialState } from \"./types\";\nimport { Reducer } from \"redux\";\n\nexport const reducer: Reducer<FavoriteState> = (\n  state = initialState,\n  action\n) => {\n  switch (action.type) {\n    case FavoriteTypes.FETCH_REQUEST: {\n      return { ...state, loading: true, error: false };\n    }\n    case FavoriteTypes.FETCH_SUCCESS: {\n      return {\n        ...state,\n        loading: false,\n        favorites: action.payload,\n        error: false\n      };\n    }\n    case FavoriteTypes.FETCH_ERROR: {\n      return { ...state, loading: false, error: false };\n    }\n    case FavoriteTypes.ADD_FAVORITE: {\n      if (!state.favorites.includes(action.payload)) {\n        return { ...state, favorites: [...state.favorites, action.payload] };\n      } else {\n        return state;\n      }\n    }\n    case FavoriteTypes.DELETE_FAVORITE: {\n      return {\n        ...state,\n        favorites: state.favorites.filter(fav => fav !== action.payload)\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default reducer;\n","import { combineReducers } from \"redux\";\nimport magic from \"./magic\";\nimport favorite from \"./favorite\";\n\nconst createRootReducer = () =>\n  combineReducers({\n    magic,\n    favorite\n  });\n\nexport default createRootReducer;\n","import { action } from \"typesafe-actions\";\nimport { MagicTypes, Magic, Filter } from \"./types\";\n\nexport const fetchRequest = () => action(MagicTypes.FETCH_REQUEST);\nexport const fetchSuccess = (data: Magic[]) =>\n  action(MagicTypes.FETCH_SUCCESS, data);\nexport const fetchError = (title: string, message: string) =>\n  action(MagicTypes.FETCH_ERROR, { title, message });\n\nexport const setFilter = (filter: Filter) =>\n  action(MagicTypes.SET_FILTER, filter);","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: `${process.env.REACT_APP_API_URL}/data`,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\n\nexport default api;","import { call, put, takeLatest } from \"redux-saga/effects\";\nimport { AnyAction } from \"redux\";\nimport { MagicTypes } from \"./types\";\nimport { fetchError, fetchSuccess } from \"./actions\";\nimport api from \"../../../services/api\";\nimport Swal from \"sweetalert2\";\n\nexport function* getMagic(action: AnyAction) {\n  try {\n    const response = yield call(api.get, \"magics.json\", action.payload);\n    yield put(fetchSuccess(response.data));\n  } catch (err) {\n    yield put(\n      fetchError(\n        \"Erro ao obter magias\",\n        err.response ? err.response.data.error.message : err\n      )\n    );\n  }\n}\n\nexport function errorMessage(action: AnyAction) {\n  Swal.fire({\n    type: \"error\",\n    title: action.payload.title,\n    text: action.payload.message\n  });\n}\n\nexport const saga = [\n  takeLatest(MagicTypes.FETCH_REQUEST, getMagic),\n  takeLatest(MagicTypes.FETCH_ERROR, errorMessage)\n];\n","import { action } from \"typesafe-actions\";\nimport { FavoriteTypes } from \"./types\";\n\nexport const fetchRequest = () => action(FavoriteTypes.FETCH_REQUEST);\nexport const fetchSuccess = (favs: number[]) =>\n  action(FavoriteTypes.FETCH_SUCCESS, favs);\nexport const fetchError = (title: string, message: string) =>\n  action(FavoriteTypes.FETCH_ERROR, { title, message });\n\nexport const addFavorite = (id: number) =>\n  action(FavoriteTypes.ADD_FAVORITE, id);\n\nexport const deleteFavorite = (id: number) =>\n  action(FavoriteTypes.DELETE_FAVORITE, id);\n","import { call, select, takeLatest, takeEvery } from \"redux-saga/effects\";\nimport { AnyAction } from \"redux\";\nimport { put } from \"redux-saga/effects\";\nimport { fetchSuccess, fetchError } from \"./actions\";\nimport { ApplicationState } from \"../../index\";\nimport Swal from \"sweetalert2\";\nimport { FavoriteTypes } from \"./types\";\n\nexport function* fetchFavorites(action: AnyAction) {\n  try {\n    const response = yield call([localStorage, \"getItem\"], \"favorites\");\n    yield put(fetchSuccess(JSON.parse(response)));\n  } catch (err) {\n    yield put(\n      fetchError(\n        \"Erro ao obter favoritos\",\n        err.response ? err.response.data.error.message : err\n      )\n    );\n  }\n}\n\nexport function* addFavorite(action: AnyAction) {\n  try {\n    let favs: number[] = yield select(\n      (state: ApplicationState) => state.favorite.favorites\n    );\n    if (!favs.includes(action.payload)) {\n      favs.push(action.payload);\n      yield put(fetchSuccess(favs));\n    }\n  } catch (err) {\n    yield put(\n      fetchError(\n        \"Erro ao salvar favorito\",\n        err.response ? err.response.data.error.message : err\n      )\n    );\n  }\n}\n\nexport function* deleteFavorite(action: AnyAction) {\n  try {\n    let favs: number[] = yield select(\n      (state: ApplicationState) => state.favorite.favorites\n    );\n    if (favs.includes(action.payload)) {\n      const index = favs.indexOf(action.payload);\n      favs = favs.splice(index, 1);\n      yield put(fetchSuccess(favs));\n    }\n  } catch (err) {\n    yield put(\n      fetchError(\n        \"Erro ao salvar favorito\",\n        err.response ? err.response.data.error.message : err\n      )\n    );\n  }\n}\n\nexport function errorMessage(action: AnyAction) {\n  Swal.fire({\n    type: \"error\",\n    title: action.payload.title,\n    text: action.payload.message\n  });\n}\nexport const saga = [\n  takeLatest(FavoriteTypes.FETCH_REQUEST, fetchFavorites),\n  takeEvery(FavoriteTypes.ADD_FAVORITE, addFavorite),\n  takeEvery(FavoriteTypes.DELETE_FAVORITE, deleteFavorite),\n  takeLatest(FavoriteTypes.FETCH_ERROR, errorMessage)\n];\n","import { all } from \"redux-saga/effects\";\nimport { saga as MagicSaga } from \"./magic/sagas\";\nimport { saga as FavoriteSaga } from \"./favorite/sagas\";\n\nexport default function* rootSaga() {\n  return yield all([...MagicSaga, ...FavoriteSaga]);\n}\n","import { compose, createStore, applyMiddleware, Store } from \"redux\";\nimport {\n  FavoriteState,\n  initialState as InitialStateFavorite\n} from \"./ducks/favorite/types\";\nimport {\n  MagicState,\n  InitialState as InitialStateMagic\n} from \"./ducks/magic/types\";\nimport createSagaMiddleware from \"@redux-saga/core\";\nimport createRootReducer from \"./ducks/rootReducer\";\nimport rootSaga from \"./ducks/rootSaga\";\nimport { saveFavorites } from \"../services/localStorage\";\n\nexport interface ApplicationState {\n  favorite: FavoriteState;\n  magic: MagicState;\n}\n\nconst initialState: ApplicationState = {\n  favorite: InitialStateFavorite,\n  magic: InitialStateMagic\n};\n\nconst configureStore = (preloadedState: ApplicationState = initialState) => {\n  const composeEnhancers =\n    (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware];\n  const store: Store<ApplicationState> = createStore(\n    createRootReducer(),\n    preloadedState,\n    composeEnhancers(applyMiddleware(...middlewares))\n  );\n\n  store.subscribe(() => {\n    saveFavorites([...store.getState().favorite.favorites]);\n  });\n\n  sagaMiddleware.run(rootSaga);\n\n  return store;\n};\n\nexport default configureStore;\n","import React from \"react\";\nimport { Layout } from \"antd\";\n\nconst Footer: React.SFC = () => {\n  return (\n    <Layout.Footer style={{ textAlign: \"center\" }}>\n      Created by{\" \"}\n      <a\n        href=\"https://github.com/antomarsi\"\n        rel=\"noopener noreferrer\"\n        target=\"_blank\"\n      >\n        Antônio Marco da Silva\n      </a>\n    </Layout.Footer>\n  );\n};\n\nexport default Footer;\n","import React, { useState } from \"react\";\nimport { Form, Row, Col, Button, Icon, Input, Switch, Select } from \"antd\";\nimport { Filter } from \"../../store/ducks/magic/types\";\nimport { Formik, FormikActions, FormikProps } from \"formik\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { ApplicationState } from \"../../store/index\";\nimport { setFilter } from \"../../store/ducks/magic/actions\";\nimport { InitialState as InitialStateMagic } from \"../../store/ducks/magic/types\";\nimport { SlideDown } from \"react-slidedown\";\n\ninterface SearchFormValues extends Filter {}\n\nconst FilterForm: React.SFC = () => {\n  const initialValues = useSelector(\n    (state: ApplicationState) => state.magic.filter\n  );\n  const magicCircles = useSelector(\n    (state: ApplicationState) => state.magic.data.magicCircles\n  );\n  const descriptors = useSelector(\n    (state: ApplicationState) => state.magic.data.descriptors\n  );\n  const dispatch = useDispatch();\n  const [expand, setExpand] = useState(false);\n  const moreOptionsForm = {\n    xs: 24,\n    sm: 8\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={(\n        values: SearchFormValues,\n        actions: FormikActions<SearchFormValues>\n      ) => {\n        dispatch(setFilter(values));\n        actions.setSubmitting(false);\n      }}\n      render={(formikBag: FormikProps<SearchFormValues>) => (\n        <Form\n          className=\"ant-advanced-search-form\"\n          onSubmit={formikBag.handleSubmit}\n        >\n          <Row gutter={24}>\n            <Col span={23}>\n              <Form.Item style={{ marginBottom: 0 }}>\n                <Form.Item style={{ display: \"inline-block\", width: \"90%\" }}>\n                  <Input\n                    size=\"large\"\n                    placeholder=\"Search by name or tag\"\n                    name=\"nameSearch\"\n                    defaultValue={formikBag.initialValues.nameSearch}\n                    onChange={formikBag.handleChange}\n                  />\n                </Form.Item>\n                <span style={{ display: \"inline-block\", width: \"2%\" }} />\n                <Form.Item\n                  style={{\n                    display: \"inline-block\",\n                    float: \"right\",\n                    width: \"8%\"\n                  }}\n                >\n                  <Switch\n                    onChange={(checked: boolean) => {\n                      formikBag.setFieldValue(\"isFavorited\", checked);\n                    }}\n                    checkedChildren={\n                      <Icon\n                        type=\"star\"\n                        theme=\"filled\"\n                        style={{ color: \"#faad14\" }}\n                      />\n                    }\n                    defaultChecked={formikBag.initialValues.isFavorited}\n                    unCheckedChildren={<Icon type=\"star\" />}\n                    checked={formikBag.values.isFavorited}\n                  />\n                </Form.Item>\n              </Form.Item>\n            </Col>\n          </Row>\n          <SlideDown closed={!expand} className=\"custom-dropdown-slidedown\">\n            {expand && (\n              <Row gutter={24}>\n                <Col {...moreOptionsForm}>\n                  <Form.Item>\n                    <Select\n                      mode=\"multiple\"\n                      style={{ width: \"100%\" }}\n                      placeholder=\"Select magic circle(s)\"\n                      defaultValue={formikBag.initialValues.magicCircle}\n                      onChange={(v: number[]) => {\n                        formikBag.setFieldValue(\"magicCircle\", v);\n                      }}\n                      allowClear={true}\n                    >\n                      {magicCircles.map(mc => (\n                        <Select.Option key={mc.id} value={mc.id}>\n                          {mc.name}\n                        </Select.Option>\n                      ))}\n                    </Select>\n                  </Form.Item>\n                </Col>\n                <Col {...moreOptionsForm}>\n                  <Form.Item>\n                    <Select\n                      mode=\"multiple\"\n                      style={{ width: \"100%\" }}\n                      placeholder=\"Select descriptor(s)\"\n                      defaultValue={formikBag.initialValues.descriptors}\n                      onChange={(v: number[]) => {\n                        formikBag.setFieldValue(\"descriptors\", v);\n                      }}\n                      allowClear={true}\n                    >\n                      {descriptors.map(d => (\n                        <Select.Option key={d.id} value={d.id}>\n                          {d.name}\n                        </Select.Option>\n                      ))}\n                    </Select>\n                  </Form.Item>\n                </Col>\n                <Col {...moreOptionsForm}>\n                  <Form.Item>\n                    <Select\n                      mode=\"multiple\"\n                      style={{ width: \"100%\" }}\n                      placeholder=\"Select tier(s)\"\n                      defaultValue={formikBag.initialValues.tiers}\n                      onChange={(v: number[]) => {\n                        formikBag.setFieldValue(\"tiers\", v);\n                      }}\n                      allowClear={true}\n                    >\n                      {[0, 1, 2, 3, 4, 5].map(t => (\n                        <Select.Option key={t} value={t}>\n                          {t}\n                        </Select.Option>\n                      ))}\n                    </Select>\n                  </Form.Item>\n                </Col>\n              </Row>\n            )}\n          </SlideDown>\n          <Row gutter={8} style={{ marginBottom: \"1rem\" }}>\n            <Col sm={{ offset: 11, span: 4 }}>\n              <Button\n                block\n                type=\"primary\"\n                htmlType=\"submit\"\n                disabled={formikBag.isSubmitting}\n              >\n                Search\n              </Button>\n            </Col>\n            <Col sm={4}>\n              <Button\n                block\n                onClick={() => {\n                  dispatch(setFilter(InitialStateMagic.filter));\n                  formikBag.resetForm();\n                  formikBag.values = formikBag.initialValues;\n                }}\n              >\n                Reset\n              </Button>\n            </Col>\n            <Col sm={4}>\n              <Button block onClick={() => setExpand(!expand)}>\n                + Options <Icon type={expand ? \"up\" : \"down\"} />\n              </Button>\n            </Col>\n          </Row>\n        </Form>\n      )}\n    />\n  );\n};\n\nexport default FilterForm;\n","import React from \"react\";\nimport { Card, Icon, Button, Typography, Row, Col } from \"antd\";\nimport { Magic } from \"../../store/ducks/magic/types\";\nimport styled from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport ReactMarkdown from \"react-markdown\";\nimport { ApplicationState } from \"../../store\";\nimport {\n  addFavorite,\n  deleteFavorite\n} from \"../../store/ducks/favorite/actions\";\nimport { SlideDown } from \"react-slidedown\";\n\nconst FavIcon = styled(Icon)`\n  font-size: 24px;\n  &.favorited {\n    color: #faad14 !important;\n  }\n`;\n\nconst TextNoSelectable = styled.a`\n  -webkit-touch-callout: none; /* iOS Safari */\n  -webkit-user-select: none; /* Safari */\n  -khtml-user-select: none; /* Konqueror HTML */\n  -moz-user-select: none; /* Firefox */\n  -ms-user-select: none; /* Internet Explorer/Edge */\n  user-select: none;\n`;\ninterface OwnProps {\n  magic: Magic;\n}\n\ntype Props = OwnProps;\n\nconst MagicCard: React.SFC<Props> = ({ magic }: Props) => {\n  const [open, setOpen] = React.useState(false);\n  const favorites = useSelector(\n    (state: ApplicationState) => state.favorite.favorites\n  );\n  const magicCircles = useSelector(\n    (state: ApplicationState) => state.magic.data.magicCircles\n  );\n  const descriptors = useSelector(\n    (state: ApplicationState) => state.magic.data.descriptors\n  );\n  const dispatch = useDispatch();\n  let isFavorited = favorites.includes(magic.id);\n  const circles = magic.circles.map(c => {\n    return {\n      circle: magicCircles.filter(mc => mc.id === c.id)[0],\n      tier: c.tier\n    };\n  });\n  const descrip = magic.circles\n    .map(c => c.descriptor.map(d => descriptors.filter(mc => mc.id === d)[0]))\n    .flat()\n    .filter((elem, index, self) => index === self.indexOf(elem));\n\n  const toggleFavorite = () => {\n    if (isFavorited) {\n      dispatch(deleteFavorite(magic.id));\n    } else {\n      dispatch(addFavorite(magic.id));\n    }\n  };\n\n  return (\n    <Card\n      className={open ? \"open\" : \"closed\"}\n      title={\n        <Row>\n          <Col>\n            <TextNoSelectable onClick={() => setOpen(!open)}>\n              <Icon type={open ? \"up\" : \"down\"} />{\" \"}\n              {magic.icon && (\n                <div>\n                  <Icon type={magic.icon} />{\" \"}\n                </div>\n              )}\n              <Typography.Text>{magic.name}</Typography.Text>\n            </TextNoSelectable>\n          </Col>\n          <Col>\n            <Typography.Text type=\"secondary\">\n              {`${circles\n                .map(c =>\n                  !c || !c.circle ? null : `${c.circle.name} ${c.tier}`\n                )\n                .join(\", \")} (${descrip\n                .map(d => (!d ? null : d.name))\n                .join(\", \")})`}\n            </Typography.Text>\n          </Col>\n        </Row>\n      }\n      bordered={false}\n      extra={\n        <Row>\n          <Col span={12}>\n            <Button\n              shape=\"circle\"\n              type=\"dashed\"\n              onClick={() => toggleFavorite()}\n            >\n              <FavIcon\n                type=\"star\"\n                theme={isFavorited ? \"filled\" : \"outlined\"}\n                className={isFavorited ? \"favorited\" : \"\"}\n              />\n            </Button>\n          </Col>\n        </Row>\n      }\n    >\n      <SlideDown closed={!open}>\n        {open && (\n          <div style={{ whiteSpace: \"pre-wrap\", paddingTop: \"24px\" }}>\n            <div>\n              <p>\n                <Typography.Text strong>Execution Time: </Typography.Text>\n                <Typography.Text>{magic.executionTime}</Typography.Text>\n              </p>\n              <p>\n                <Typography.Text strong>Range: </Typography.Text>\n                <Typography.Text>{magic.range}</Typography.Text>\n              </p>\n              <p>\n                <Typography.Text strong>Duration: </Typography.Text>\n                <Typography.Text>{magic.duration}</Typography.Text>\n              </p>\n              <p>\n                <Typography.Text strong>Resistance Test: </Typography.Text>\n                <Typography.Text>{magic.resistanceTest}</Typography.Text>\n              </p>\n              {magic.target && (\n                <p>\n                  <Typography.Text strong>Target: </Typography.Text>\n                  <Typography.Text>{magic.target}</Typography.Text>\n                </p>\n              )}\n              {magic.area && (\n                <p>\n                  <Typography.Text strong>Area: </Typography.Text>\n                  <Typography.Text>{magic.area}</Typography.Text>\n                </p>\n              )}\n              {magic.effect && (\n                <p>\n                  <Typography.Text strong>Effect: </Typography.Text>\n                  <Typography.Text>{magic.effect}</Typography.Text>\n                </p>\n              )}\n              {magic.materialComponent && (\n                <p>\n                  <Typography.Text strong>Material Component: </Typography.Text>\n                  <Typography.Text>{magic.materialComponent}</Typography.Text>\n                </p>\n              )}\n              {magic.xpCost && (\n                <p>\n                  <Typography.Text strong>XP Cost: </Typography.Text>\n                  <Typography.Text>{magic.xpCost}</Typography.Text>\n                </p>\n              )}\n\n              <ReactMarkdown source={magic.description} />\n            </div>\n          </div>\n        )}\n      </SlideDown>\n    </Card>\n  );\n};\n\nexport default MagicCard;\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Magic } from \"../../store/ducks/magic/types\";\nimport MagicCard from \"../MagicCard\";\nimport { List, Typography, Icon } from \"antd\";\nimport { ApplicationState } from \"../../store\";\nimport { fetchRequest as fetchMagicRequest } from \"../../store/ducks/magic/actions\";\nimport SlideDown from \"react-slidedown\";\nimport styled from \"styled-components\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\n\nconst TextNoSelectable = styled.a`\n  -webkit-touch-callout: none; /* iOS Safari */\n  -webkit-user-select: none; /* Safari */\n  -khtml-user-select: none; /* Konqueror HTML */\n  -moz-user-select: none; /* Firefox */\n  -ms-user-select: none; /* Internet Explorer/Edge */\n  user-select: none;\n`;\n\ninterface MagicTierListProps {\n  tier: number;\n  loading: boolean;\n  values: Magic[];\n}\n\nconst MagicTierList: React.SFC<MagicTierListProps> = (\n  props: MagicTierListProps\n) => {\n  const [open, setOpen] = useState(true);\n  return (\n    <div>\n      <Typography.Title level={3}>\n        <TextNoSelectable onClick={() => setOpen(!open)}>\n          <Icon type={open ? \"down\" : \"up\"} />\n        </TextNoSelectable>{\" \"}\n        Tier {props.tier}\n        <Typography.Text className=\"magic-tier-subtitle\">\n          {props.values.length} spells for this tier.\n        </Typography.Text>\n      </Typography.Title>\n      <SlideDown closed={!open}>\n        {open && (\n          <List\n            itemLayout=\"horizontal\"\n            dataSource={props.values}\n            loading={props.loading}\n            rowKey={(m: Magic) => m.id}\n            renderItem={(magicItem: Magic) => (\n              <MagicCard magic={magicItem} key={magicItem.id} />\n            )}\n          />\n        )}\n      </SlideDown>\n    </div>\n  );\n};\n\nconst MagicList: React.SFC = () => {\n  const filter = useSelector((state: ApplicationState) => state.magic.filter);\n  const favorites = useSelector(\n    (state: ApplicationState) => state.favorite.favorites\n  );\n\n  const magics = useSelector((state: ApplicationState) => {\n    return state.magic.data.magics\n      .filter(m => !filter.isFavorited || favorites.includes(m.id))\n      .filter(\n        m =>\n          !filter.nameSearch.length ||\n          m.name.toLowerCase().includes(filter.nameSearch.toLowerCase())\n      )\n      .filter(\n        magia =>\n          !filter.tiers.length ||\n          filter.tiers.some(x => magia.circles.some(y => y.tier === x))\n      )\n      .filter(\n        magia =>\n          !filter.magicCircle.length ||\n          filter.magicCircle.some(x => magia.circles.some(y => y.id === x))\n      )\n      .filter(\n        magia =>\n          !filter.descriptors.length ||\n          filter.descriptors.some(x =>\n            magia.circles.some(y => y.descriptor.some(z => z === x))\n          )\n      );\n  });\n  const loading = useSelector((state: ApplicationState) => state.magic.loading);\n  const error = useSelector((state: ApplicationState) => state.magic.error);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchMagicRequest());\n  }, [dispatch]);\n\n  const tiers = [0, 1, 2, 3, 4, 5].map(t =>\n    magics.filter(m => {\n      return m.circles.find(c => c.tier === t);\n    })\n  );\n  return (\n    <div>\n      {loading && (\n        <div style={{ textAlign: \"center\", fontSize: 48 }}>\n          <Icon type=\"loading\" />\n        </div>\n      )}\n      {!loading &&\n        tiers\n          .map((values, index) => values.length)\n          .flat()\n          .reduce((sum, current) => sum + current, 0) === 0 && (\n          <div style={{ textAlign: \"center\", fontSize: 48 }}>\n            <Icon type=\"meh\" />\n            <br />\n            <Typography.Title level={4}>No spell found!</Typography.Title>\n          </div>\n        )}\n      {error && (\n        <div style={{ textAlign: \"center\", fontSize: 48 }}>\n          <Icon type=\"frown\" />\n          <br />\n          <Typography.Title level={4}>\n            That's so sad... Bard, play Despacito!\n          </Typography.Title>\n        </div>\n      )}\n      {!loading && (\n        <TransitionGroup className=\"magic-tier-list\">\n          {tiers.map(\n            (values: Magic[], index: number) =>\n              values.length > 0 && (\n                <CSSTransition key={index} timeout={500} className=\"magic-tier\">\n                  <MagicTierList\n                    tier={index}\n                    loading={loading}\n                    values={values}\n                  />\n                </CSSTransition>\n              )\n          )}\n        </TransitionGroup>\n      )}\n    </div>\n  );\n};\nexport default MagicList;\n","import React from \"react\";\nimport \"rpg-awesome/css/rpg-awesome.min.css\";\nimport { Layout, BackTop, Icon, Row } from \"antd\";\nimport Topbar from \"./components/Topbar\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./store\";\nimport Footer from \"./components/Footer\";\nimport FilterForm from \"./components/FilterForm/index\";\nimport MagicList from \"./components/MagicList/index\";\nconst { Content } = Layout;\n\nconst store = configureStore();\n\nconst App: React.SFC = () => {\n  return (\n    <Provider store={store}>\n      <Layout className=\"layout\">\n        <Topbar />\n        <Layout>\n          <Content className=\"page-content\">\n            <div className=\"content-wrapper\">\n              <Row>\n                <FilterForm />\n              </Row>\n              <Row>\n                <MagicList />\n              </Row>\n            </div>\n            <BackTop>\n              <div className=\"ant-back-top-inner\">\n                <Icon type=\"arrow-up\" />\n              </div>\n            </BackTop>\n          </Content>\n        </Layout>\n        <Footer />\n      </Layout>\n    </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}