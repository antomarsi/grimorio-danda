{"version":3,"sources":["components/Topbar.js","components/Filtro.js","components/MagiaList.js","pages/Home.js","pages/NotFound.js","pages/MagiaInfo.js","App.js","serviceWorker.js","index.js"],"names":["Topbar","state","isOpen","this","setState","_this2","react_default","a","createElement","Navbar","color","dark","expand","fixed","Link","to","style","textDecoration","NavbarToggler","onClick","toggle","Collapse","navbar","Nav","className","NavItem","NavLink","href","Component","Filtro","levelsFilter","name","isChecked","circulosFilter","stateName","newData","map","l","Object","defineProperty","props","onMultiChoiceChange","filter","handleChange","target","type","checked","value","c","_this3","_this$props","nameFilter","favoritesOnly","Card","CardBody","CardTitle","Button","resetFilter","Form","FormGroup","Label","for","lib","element","Input","id","debounceTimeout","onChange","e","n","concat","onChangeMultiChoice","check","MagiaList","isFav","magiaId","_this","removeFav","addToFav","magia","favorites","includes","ListGroupItem","key","marginBottom","index_es","icon","FullStar","EmptyStar","size","toggleFav","slugify","nome","replacement","niveis","nivel","index","circulo","descritores","descritor","listaMagia","magias","sort","b","length","toLowerCase","some","x","y","Number","parseInt","ListGroup","renderMagia","Home","onSearchChange","values","_this$state","Container","Row","Col","xs","md","src_components_Filtro","src_components_MagiaList","NotFound","MagiaInfo","history","magicId","match","params","find","push","fluid","CardHeader","tag","title","faArrowCircleLeft","tempoExecucao","alcance","alvo","area","efeito","duracao","testeResistencia","componenteMaterial","custoXP","dangerouslySetInnerHTML","__html","descricao","withRouter","App","localStorage","JSON","parse","toConsumableArray","saveFav","fav","stringify","_this4","components_Topbar","role","Switch","Route","exact","path","render","pages_Home","assign","pages_MagiaInfo","component","Boolean","window","location","hostname","ReactDOM","HashRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.28e2b6b5.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\n\nclass Topbar extends Component {\n  state = {\n    isOpen: false\n  };\n\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  render() {\n    return (\n      <Navbar color=\"dark\" dark expand=\"md\" fixed=\"top\">\n        <Link to=\"/\" style={{ textDecoration: \"none\", color: \"#FFFFFF\" }}>\n          Grimório Dand'a\n        </Link>\n        <NavbarToggler onClick={() => this.toggle()} />\n        <Collapse isOpen={this.state.isOpen} navbar>\n          <Nav className=\"ml-auto\" navbar>\n            <NavItem>\n              <NavLink href=\"https://github.com/antomarsi/grimorio-danda\">\n                GitHub\n              </NavLink>\n            </NavItem>\n          </Nav>\n        </Collapse>\n      </Navbar>\n    );\n  }\n}\n\nexport default Topbar;\n","import React, { Component } from \"react\";\nimport {\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Card,\n  CardBody,\n  CardTitle,\n  Button\n} from \"reactstrap\";\nimport { DebounceInput } from \"react-debounce-input\";\nimport './Filtro.css';\n\nclass Filtro extends Component {\n  state = {\n    levelsFilter: [\n      { name: 0, isChecked: false },\n      { name: 1, isChecked: false },\n      { name: 2, isChecked: false },\n      { name: 3, isChecked: false },\n      { name: 4, isChecked: false },\n      { name: 5, isChecked: false }\n    ],\n    circulosFilter: [\n      { name: \"Abjuração\", isChecked: false },\n      { name: \"Adivinhação\", isChecked: false },\n      { name: \"Encantamento\", isChecked: false },\n      { name: \"Evocação\", isChecked: false },\n      { name: \"Etérea\", isChecked: false },\n      { name: \"Solar\", isChecked: false },\n      { name: \"Lunar\", isChecked: false },\n      { name: \"Transmutação\", isChecked: false },\n      { name: \"Tempo&Espaço\", isChecked: false }\n    ]\n  };\n\n  onChangeMultiChoice(stateName, name) {\n    let newData = this.state[stateName].map(l => {\n      if (l.name === name) {\n        l.isChecked = !l.isChecked;\n      }\n      return l;\n    });\n    this.setState(\n      { [stateName]: newData },\n      this.props.onMultiChoiceChange(\n        stateName,\n        this.state[stateName].filter(l => l.isChecked).map(l => l.name)\n      )\n    );\n  }\n\n  resetFilter() {\n    this.props.handleChange({\n      target: { type: \"checkbox\", name: \"favoritesOnly\", checked: false }\n    });\n    this.props.handleChange({ target: { name: \"nameFilter\", value: \"\" } });\n    this.setState(\n      {\n        levelsFilter: this.state.levelsFilter.map(l => {\n          l.isChecked = false;\n          return l;\n        }),\n        circulosFilter: this.state.circulosFilter.map(c => {\n          c.isChecked = false;\n          return c;\n        })\n      },\n      () => {\n        this.props.onMultiChoiceChange(\"levelsFilter\", []);\n        this.props.onMultiChoiceChange(\"circulosFilter\", []);\n      }\n    );\n  }\n\n  render() {\n    const { nameFilter, favoritesOnly } = this.props;\n\n    return (\n      <Card className=\"filtro\">\n        <CardBody>\n          <CardTitle>\n            <h2>\n              Filtro\n              <Button\n                className={\"float-right\"}\n                onClick={() => this.resetFilter()}\n                color=\"primary\"\n              >\n                Reset\n              </Button>\n            </h2>\n          </CardTitle>\n          <Form>\n            <FormGroup>\n              <Label for=\"nameFilter\">Nome</Label>\n              <DebounceInput\n                element={Input}\n                value={nameFilter}\n                name=\"nameFilter\"\n                id=\"nameFilter\"\n                debounceTimeout={300}\n                onChange={e => this.props.handleChange(e)}\n              />\n            </FormGroup>\n            <hr />\n            <FormGroup>\n              <Label for=\"levelsFilter\">Nível</Label>\n              <br />\n              {this.state.levelsFilter.map(n => (\n                <div className=\"form-check form-check-inline\">\n                  <input\n                    className=\"form-check-input\"\n                    type=\"checkbox\"\n                    checked={n.isChecked}\n                    id={`nivel_${n.name}`}\n                    onChange={() =>\n                      this.onChangeMultiChoice(\"levelsFilter\", n.name)\n                    }\n                  />\n                  <label className=\"form-check-label\" for={`nivel_${n.name}`}>\n                    {n.name}\n                  </label>\n                </div>\n              ))}\n            </FormGroup>\n            <hr />\n            <FormGroup>\n              <Label for=\"circulosFilter\">Círculo</Label>\n              <br />\n              {this.state.circulosFilter.map(n => (\n                <div className=\"form-check\">\n                  <input\n                    className=\"form-check-input\"\n                    type=\"checkbox\"\n                    checked={n.isChecked}\n                    id={`nivel_${n.name}`}\n                    onChange={() =>\n                      this.onChangeMultiChoice(\"circulosFilter\", n.name)\n                    }\n                  />\n                  <label className=\"form-check-label\" for={`nivel_${n.name}`}>\n                    {n.name}\n                  </label>\n                </div>\n              ))}\n            </FormGroup>\n            <hr />\n            <FormGroup check>\n              <Label check>\n                <Input\n                  type=\"checkbox\"\n                  name=\"favoritesOnly\"\n                  id=\"favoritesOnly\"\n                  value={favoritesOnly}\n                  onChange={e => this.props.handleChange(e)}\n                />{\" \"}\n                Somente Favoritos\n              </Label>\n            </FormGroup>\n          </Form>\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nexport default Filtro;\n","import React, { Component } from \"react\";\nimport { ListGroup, ListGroupItem } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport slugify from \"slugify\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faStar as FullStar } from \"@fortawesome/free-solid-svg-icons\";\nimport { faStar as EmptyStar } from \"@fortawesome/free-regular-svg-icons\";\nimport \"./MagiaList.css\";\n\nclass MagiaList extends Component {\n  toggleFav(isFav, magiaId) {\n    if (isFav) {\n      (magiaId => this.props.removeFav(magiaId))(magiaId);\n    } else {\n      (magiaId => this.props.addToFav(magiaId))(magiaId);\n    }\n  }\n\n  renderMagia(magia) {\n    const { favorites } = this.props;\n    let isFav = favorites.includes(magia.id);\n    return (\n      <ListGroupItem key={magia.id}>\n        <dl className=\"row\" style={{ marginBottom: 0 }}>\n          <dt className=\"col-sm-6\">\n            <FontAwesomeIcon\n              className={isFav ? \"text-warning\" : \"\"}\n              icon={isFav ? FullStar : EmptyStar}\n              size=\"lg\"\n              onClick={() => this.toggleFav(isFav, magia.id)}\n            />{\" \"}\n            <Link\n              to={`${magia.id}/${slugify(magia.nome, { replacement: \"-\" })}`}\n            >\n              {magia.nome}\n            </Link>\n          </dt>\n          <dd className=\"col-sm-6\">\n            {magia.niveis.map((nivel, index) => (\n              <p key={index}>\n                {nivel.circulo} {nivel.nivel}{\" \"}\n                {magia.descritores[index] &&\n                  `(${magia.descritores[index].descritor})`}\n              </p>\n            ))}\n          </dd>\n        </dl>\n      </ListGroupItem>\n    );\n  }\n  render() {\n    const {\n      nameFilter,\n      levelsFilter,\n      circulosFilter,\n      listaMagia,\n      favoritesOnly,\n      favorites\n    } = this.props;\n    const magias = listaMagia\n      .sort((a, b) => a.niveis[0].nivel - b.niveis[0].nivel)\n      .filter(\n        magia =>\n          !nameFilter.length ||\n          magia.nome.toLowerCase().includes(nameFilter.toLowerCase())\n      )\n      .filter(\n        magia =>\n          !levelsFilter.length ||\n          levelsFilter.some(x =>\n            magia.niveis.some(y => y.nivel === Number.parseInt(x))\n          )\n      )\n      .filter(\n        magia =>\n          !circulosFilter.length ||\n          circulosFilter.some(x =>\n            magia.niveis.some(y => y.circulo.toLowerCase() === x.toLowerCase())\n          )\n      )\n      .filter(magia => !favoritesOnly || favorites.includes(magia.id));\n    return (\n      <div>\n        {(nameFilter.length ||\n          levelsFilter.length ||\n          circulosFilter.length ||\n          favoritesOnly) &&\n          magias.length > 0 && <h4>{magias.length} resultados encontrados</h4>}\n        <ListGroup className=\"magia-list border border-secundary rounded\">\n          {magias.length > 0 && magias.map(magia => this.renderMagia(magia))}\n          {magias.length === 0 && (\n            <ListGroupItem>\n              <h3 className=\"text-center\">Nenhuma magia encontrada!</h3>\n            </ListGroupItem>\n          )}\n        </ListGroup>\n      </div>\n    );\n  }\n}\n\nexport default MagiaList;\n","import React, { Component } from \"react\";\nimport Filtro from \"../components/Filtro\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport MagiaList from \"../components/MagiaList\";\nimport PropTypes from 'prop-types';\n\nclass Home extends Component {\n  // Filtros deNome, niveis (círculo/nivel),\n  state = {\n    nameFilter: \"\",\n    levelsFilter: [],\n    circulosFilter: [],\n    favoritesOnly: false\n  };\n\n  onSearchChange = e => {\n    if (e.target.type === \"checkbox\") {\n      this.setState({ [e.target.name]: e.target.checked });\n    } else {\n      this.setState({ [e.target.name]: e.target.value });\n    }\n  };\n\n  onMultiChoiceChange = (name, values) => {\n    this.setState({ [name]: values });\n  };\n\n  render() {\n    const {\n      nameFilter,\n      levelsFilter,\n      circulosFilter,\n      favoritesOnly\n    } = this.state;\n\n    const { listaMagia, favorites, addToFav, removeFav } = this.props;\n    return (\n      <Container>\n        <Row>\n          <Col xs=\"12\" md=\"6\">\n            <Filtro\n              onMultiChoiceChange={this.onMultiChoiceChange}\n              nameFilter={nameFilter}\n              handleChange={this.onSearchChange}\n              favoritesOnly={favoritesOnly}\n            />\n          </Col>\n          <Col xs=\"12\" md=\"6\">\n            <MagiaList\n              levelsFilter={levelsFilter}\n              circulosFilter={circulosFilter}\n              nameFilter={nameFilter}\n              favoritesOnly={favoritesOnly}\n              listaMagia={listaMagia}\n              favorites={favorites}\n              addToFav={addToFav}\n              removeFav={removeFav}\n            />\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nHome.propTypes = {\n  listaMagia: PropTypes.array.isRequired,\n  favorites: PropTypes.array.isRequired\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\n\nclass NotFound extends Component {\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col md=\"12\">\n            <div className=\"error-template\">\n              <h1>Oops!</h1>\n              <h2>404 Not Found!</h2>\n              <div className=\"error-details\">\n                Mals, a página não foi encontrada...\n              </div>\n              <div className=\"error-actions\">\n                <Link to=\"/\" className=\"btn btn-primary btn-lg\">\n                  Take Me Home <small style={{textDecoration: 'line-through'}}>Country roads</small>\n                </Link>\n              </div>\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default NotFound;\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { Container, Card, CardBody, CardHeader } from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faArrowCircleLeft,\n  faStar as FullStar\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { faStar as EmptyStar } from \"@fortawesome/free-regular-svg-icons\";\nimport { PropTypes } from 'prop-types';\n\nclass MagiaInfo extends Component {\n  state = {\n    magia: null\n  };\n\n  componentWillMount() {\n    const {\n      history,\n      listaMagia,\n      match: {\n        params: { magicId }\n      }\n    } = this.props;\n    const magia = listaMagia.find(x => x.id === Number.parseInt(magicId));\n    if (!magia) {\n      history.push(\"/404\");\n    }\n\n    this.setState({ magia });\n  }\n\n  toggleFav(isFav, magiaId) {\n    if (isFav) {\n      (magiaId => this.props.removeFav(magiaId))(magiaId);\n    } else {\n      (magiaId => this.props.addToFav(magiaId))(magiaId);\n    }\n  }\n\n  render() {\n    const { magia } = this.state;\n    const { favorites } = this.props;\n    let isFav = favorites.includes(magia.id);\n\n    if (!magia) return <div />;\n    return (\n      <Container fluid>\n        <Card>\n          <CardHeader tag=\"h3\">\n            <FontAwesomeIcon\n              className={isFav ? \"text-warning\" : \"\"}\n              icon={isFav ? FullStar : EmptyStar}\n              size=\"lg\"\n              onClick={() => this.toggleFav(isFav, magia.id)}\n            />{\" \"}\n            {magia.nome}\n            <Link to=\"/\" title=\"Voltar\" className=\"pull-right\">\n              <FontAwesomeIcon icon={faArrowCircleLeft} />\n            </Link>{\" \"}\n          </CardHeader>\n          <CardBody>\n            <dl className=\"row\">\n              <dt className=\"col-sm-3\">Niveis</dt>\n              <dd className=\"col-sm-9\">\n                {magia.niveis.map((nivel, index) => (\n                  <p key={index}>\n                    {nivel.circulo} {nivel.nivel}{\" \"}\n                    {magia.descritores[index] &&\n                      `(${magia.descritores[index].descritor})`}\n                  </p>\n                ))}\n              </dd>\n              <dt className=\"col-sm-3\">Descritores</dt>\n              <dd className=\"col-sm-9\">\n                {magia.descritores.map((descritor, index) => (\n                  <p key={index}>{descritor.descritor}</p>\n                ))}\n              </dd>\n              {magia.tempoExecucao && (\n                <dt className=\"col-sm-3\">Tempo de execução</dt>\n              )}\n              {magia.tempoExecucao && (\n                <dd className=\"col-sm-9\">{magia.tempoExecucao}</dd>\n              )}\n              {magia.alcance && <dt className=\"col-sm-3\">Alcance</dt>}\n              {magia.alcance && <dd className=\"col-sm-9\">{magia.alcance}</dd>}\n              {magia.alvo && <dt className=\"col-sm-3\">Alvo</dt>}\n              {magia.alvo && <dd className=\"col-sm-9\">{magia.alvo}</dd>}\n              {magia.area && <dt className=\"col-sm-3\">Area</dt>}\n              {magia.area && <dd className=\"col-sm-9\">{magia.area}</dd>}\n              {magia.efeito && <dt className=\"col-sm-3\">Efeito</dt>}\n              {magia.efeito && <dd className=\"col-sm-9\">{magia.efeito}</dd>}\n              {magia.duracao && <dt className=\"col-sm-3\">Duração</dt>}\n              {magia.duracao && <dd className=\"col-sm-9\">{magia.duracao}</dd>}\n              {magia.testeResistencia && (\n                <dt className=\"col-sm-3\">Teste de Resistência</dt>\n              )}\n              {magia.testeResistencia && (\n                <dd className=\"col-sm-9\">{magia.testeResistencia}</dd>\n              )}\n              {magia.componenteMaterial && (\n                <dt className=\"col-sm-3\">Componente material</dt>\n              )}\n              {magia.componenteMaterial && (\n                <dd className=\"col-sm-9\">{magia.componenteMaterial}</dd>\n              )}\n              {magia.custoXP && <dt className=\"col-sm-3\">Custo de XP</dt>}\n              {magia.custoXP && <dd className=\"col-sm-9\">{magia.custoXP}</dd>}\n            </dl>\n            <hr />\n            <p className=\"h4\">Descrição</p>\n            <p dangerouslySetInnerHTML={{ __html: magia.descricao }} />\n          </CardBody>\n        </Card>\n      </Container>\n    );\n  }\n}\n\nMagiaInfo.propTypes = {\n  favorites: PropTypes.array.isRequired\n}\n\nexport default withRouter(MagiaInfo);\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Topbar from \"./components/Topbar\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport NotFound from \"./pages/NotFound\";\nimport MagiaInfo from \"./pages/MagiaInfo\";\nimport magias from \"./data/magias.json\";\n\nclass App extends Component {\n  state = {\n    magias: [],\n    favorites: []\n  };\n\n  componentWillMount() {\n    if (localStorage.favorites) {\n      this.setState({\n        magias: magias,\n        favorites: JSON.parse(localStorage.favorites)\n      });\n    } else {\n      this.setState({ magias });\n    }\n  }\n  addToFav(id) {\n    if (!this.state.favorites.includes(id)) {\n      this.setState({ favorites: [...this.state.favorites, id] }, () =>\n        this.saveFav()\n      );\n    }\n  }\n  removeFav(id) {\n    if (this.state.favorites.includes(id)) {\n      this.setState(\n        { favorites: this.state.favorites.filter(fav => fav !== id) },\n        () => this.saveFav()\n      );\n    }\n  }\n\n  saveFav() {\n    if (this.state.favorites) {\n      localStorage.favorites = JSON.stringify(this.state.favorites);\n    }\n  }\n\n  render() {\n    const { magias, favorites } = this.state;\n    return (\n      <div>\n        <Topbar />\n        <main role=\"main\">\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              render={props => (\n                <Home\n                  {...props}\n                  listaMagia={magias}\n                  favorites={favorites}\n                  addToFav={id => this.addToFav(id)}\n                  removeFav={id => this.removeFav(id)}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/:magicId(\\d+)/*\"\n              render={props => (\n                <MagiaInfo\n                  {...props}\n                  favorites={favorites}\n                  listaMagia={magias}\n                  addToFav={id => this.addToFav(id)}\n                  removeFav={id => this.removeFav(id)}\n                />\n              )}\n            />\n            <Route component={NotFound} />\n          </Switch>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"rpg-awesome/css/rpg-awesome.min.css\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}